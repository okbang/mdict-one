CREATE TYPE DEFECT_RECORD                                                                                                                                                                                                                                                                                                     AS OBJECT (
   project_id     NUMBER,
   project_code   VARCHAR2 (30),
   create_date    DATE,
   qc_id          NUMBER,
   process_id     NUMBER,
   wp_id          NUMBER,
   weighted       NUMBER,
   milestone_no   NUMBER,                        -- Milestone number 1,2,3,...
   group_name     VARCHAR2 (30),
   lifecycle_name VARCHAR2 (30)
);
/
CREATE TYPE DELIVERABLE_RECORD                                                                                                                                                                                                                                                                                                     AS OBJECT (
   module_id             NUMBER,
   module_name           VARCHAR2 (100),
   project_id            NUMBER,
   project_code          VARCHAR2 (50),
   planned_release       DATE,
   actual_release_date   DATE,
   stage_begin_date      DATE,
   deviation             NUMBER,
   group_name			 VARCHAR2 (30)
)
/
CREATE TYPE MILESTONE_RECORD                                                                                                                                                                                                                                                                                                     AS OBJECT (
   project_id         NUMBER,
   milestone_id       NUMBER,
   NAME               VARCHAR2 (30),
   base_finish_date   DATE,
   start_date         DATE,
   milestone_no       NUMBER                 -- Milestone number 1,2,3,...
);
/
CREATE TYPE MODULE_RECORD                                                                                                                                                                                                                                                                                                     AS OBJECT (
   project_id     NUMBER,
   project_code   VARCHAR2 (30),
   project_cat    NUMBER,
   wp_id          NUMBER,
   ucp_actual     NUMBER,
   ucp_created    NUMBER,
   group_name     VARCHAR2 (30)
);
/
CREATE TYPE PROJECT_RECORD                                                                                                                                                                                                                                                                                                     AS OBJECT (
   project_id         NUMBER,
   code               VARCHAR2 (30),
   project_category   VARCHAR2 (30),
   actual_effort      NUMBER,
   start_date         DATE,
   group_name		  VARCHAR2 (30)
)
/
CREATE TYPE TIMESHEET_RECORD                                                                                                                                                                                                                                                                                                     AS OBJECT (
   project_id     NUMBER,
   project_code   VARCHAR2 (30),
   occur_date     DATE,
   DURATION       NUMBER,
   process_id     NUMBER,
   milestone_no   NUMBER,                       -- Milestone number 1,2,3,...
   wp_id          NUMBER,
   group_name	  VARCHAR2 (30),
   lifecycle_name	  VARCHAR2 (30)
)
/


CREATE TABLE ACTIVITY_TYPE ( 
	NAME    	VARCHAR2(90) NOT NULL,
	AT_ID   	NUMBER NULL,
	CODE    	VARCHAR2(100) NOT NULL,
	DISABLED	NUMBER(2,0) NULL 
	)
/
COMMENT ON TABLE ACTIVITY_TYPE IS '(DMS)'
/
CREATE TABLE AP_GROUP ( 
	NAME	VARCHAR2(30) NOT NULL 
	)
/
CREATE TABLE AP_SIZEUNIT ( 
	UNIT_ID	NUMBER NOT NULL,
	NAME   	VARCHAR2(90) NOT NULL 
	)
/
COMMENT ON TABLE AP_SIZEUNIT IS '(Insight)'
/
CREATE TABLE APPLICATION_TYPE ( 
	APPLICATION_ID	NUMBER NOT NULL,
	TYPE_NAME     	VARCHAR2(50) NOT NULL,
	STATUS        	VARCHAR2(1) NULL 
	)
/
COMMENT ON TABLE APPLICATION_TYPE IS 'Project''s application type (Insight)'
/
CREATE TABLE APPROVAL ( 
	APPROVAL_ID    	NUMBER NOT NULL,
	APPROVAL_STATUS	NUMBER NULL,
	APPROVAL_DATE  	DATE NULL,
	TYPE           	NUMBER NULL,
	PROJECT_ID     	NUMBER NULL,
	DEVELOPER_ID   	NUMBER NULL 
	)
/
COMMENT ON TABLE APPROVAL IS 'Signature lists of Insight'
/
COMMENT ON COLUMN APPROVAL.TYPE IS 'applies to PP  or WO signatures'
/
CREATE TABLE ARCHIVE_ACTUAL_EFFORT_BY_TYPE ( 
	PROJECT_ID   	NUMBER NOT NULL,
	TYPEOFWORK_ID	NUMBER NOT NULL,
	ACTUAL_EFFORT	NUMBER NOT NULL 
	)
/
CREATE TABLE ASSIGNMENT ( 
	ASSIGNMENT_ID        	NUMBER NOT NULL,
	PROJECT_ID           	NUMBER NOT NULL,
	DEVELOPER_ID         	NUMBER NOT NULL,
	TYPE                 	NUMBER(2,0) NOT NULL,
	BEGIN_DATE           	DATE NULL,
	END_DATE             	DATE NULL,
	USAGE                	NUMBER NULL,
	RESPONSE             	NUMBER(3,0) DEFAULT 0 NULL,
	NOTE                 	VARCHAR2(600) NULL,
	PROJECT_POSITION_CODE	VARCHAR2(100) NULL,
	TEAM_ID              	NUMBER(22,0) NULL,
	QUALIFICATION        	VARCHAR2(600) NULL 
	)
/
COMMENT ON TABLE ASSIGNMENT IS 'Contain importance information of project team assignments, effect to Dashboard, FI and Timesheet'
/
COMMENT ON COLUMN ASSIGNMENT.RESPONSE IS 'Responsibility'
/
COMMENT ON COLUMN ASSIGNMENT.NOTE IS 'For Insight comments'
/
CREATE TABLE AUDIT_ACTIONS ( 
	ACTION	NUMBER NOT NULL,
	NAME  	VARCHAR2(27) NOT NULL 
	)
/
COMMENT ON TABLE AUDIT_ACTIONS IS 'Description table for audit trail action type codes.  Maps action type numbers to action type names'
/
COMMENT ON COLUMN AUDIT_ACTIONS.ACTION IS 'Numeric audit trail action type code'
/
COMMENT ON COLUMN AUDIT_ACTIONS.NAME IS 'Name of the type of audit trail action'
/
CREATE TABLE BUSINESS_DOMAIN ( 
	DOMAIN_ID  	NUMBER NOT NULL,
	DOMAIN_NAME	VARCHAR2(50) NOT NULL,
	STATUS     	VARCHAR2(1) NULL 
	)
/
COMMENT ON TABLE BUSINESS_DOMAIN IS 'list of business domains, see WO of insight'
/
CREATE TABLE CHANGES_OF_PROJECT_PLAN ( 
	CHANGE_ID  	NUMBER NOT NULL,
	PROJECT_ID 	NUMBER NULL,
	ITEM       	VARCHAR2(150) NULL,
	CHANGES    	VARCHAR2(600) NULL,
	REASON     	VARCHAR2(600) NULL,
	VERSION    	VARCHAR2(10) NULL,
	NOTE       	VARCHAR2(600) NULL,
	CHANGE_DATE	DATE NULL,
	ACTION     	VARCHAR2(10) NULL 
	)
/
COMMENT ON TABLE CHANGES_OF_PROJECT_PLAN IS 'Insight'
/
CREATE TABLE CHANGES_OF_WORKORDER ( 
	CHANGE_ID  	NUMBER(10,0) NOT NULL,
	PROJECT_ID 	NUMBER(10,0) NULL,
	ITEM       	VARCHAR2(150) NULL,
	CHANGES    	VARCHAR2(600) NULL,
	REASON     	VARCHAR2(600) NULL,
	VERSION    	VARCHAR2(10) NULL,
	NOTE       	VARCHAR2(600) NULL,
	CHANGE_DATE	DATE NULL,
	ACTION     	VARCHAR2(10) NULL 
	)
/
COMMENT ON TABLE CHANGES_OF_WORKORDER IS 'See Insight'
/
CREATE TABLE COMMDEF ( 
	COMMDEFID  	NUMBER NOT NULL,
	PROJECTID  	NUMBER NOT NULL,
	DEFECTDES  	VARCHAR2(300) NULL,
	COMMDEFCODE	VARCHAR2(100) NULL,
	DPCODE     	VARCHAR2(100) NULL,
	DEFTYPE    	NUMBER NULL,
	ROOTCAUSE  	VARCHAR2(300) NULL,
	CAUSECATE  	NUMBER(1,0) NULL 
	)
/
COMMENT ON TABLE COMMDEF IS 'Common defects(Insight)'
/
CREATE TABLE COMMUNICATION_REPORT ( 
	COM_ID         	NUMBER NOT NULL,
	COM_PRJ_ID     	NUMBER NOT NULL,
	COM_TYPE       	VARCHAR2(600) NOT NULL,
	COM_PARENT_TYPE	NUMBER NOT NULL,
	COM_METHOD_TOOL	VARCHAR2(600) NULL,
	COM_WHEN       	VARCHAR2(600) NULL,
	COM_INFORMATION	VARCHAR2(600) NULL,
	COM_RESPONSIBLE	VARCHAR2(600) NULL 
	)
/
CREATE TABLE COMPLETENESS_RATE ( 
	VALUE      	NUMBER NULL,
	LAST_UPDATE	DATE NULL,
	STATUSID   	NUMBER NOT NULL,
	PROJECT_ID 	NUMBER NOT NULL 
	)
/
COMMENT ON TABLE COMPLETENESS_RATE IS 'Project custom completeness rates(insight)'
/
CREATE TABLE CONSTRAINTS ( 
	CONSTRAINT_ID  	NUMBER NOT NULL,
	DESCRIPTION    	VARCHAR2(600) NULL,
	CONSTRAINT_TYPE	NUMBER NULL,
	PROJECT_PLAN_ID	NUMBER NULL,
	IS_CONSTRAINT  	NUMBER NOT NULL,
	NOTE           	VARCHAR2(600) NULL 
	)
/
COMMENT ON TABLE CONSTRAINTS IS 'Project constraints (Insight)'
/
CREATE TABLE CONTRACT_TYPE ( 
	CONTRACT_TYPE_ID         	NUMBER NOT NULL,
	CONTRACT_TYPE_NAME       	VARCHAR2(150) NOT NULL,
	CONTRACT_TYPE_DESCRIPTION	VARCHAR2(3000) NULL,
	CONTRACT_TYPE_STATUS     	NUMBER(1,0) NULL 
	)
/
COMMENT ON TABLE CONTRACT_TYPE IS 'List of Contract Type, see WO of FSOFT Insight'
/
CREATE TABLE CONVERSION ( 
	CONVERSION_ID	NUMBER NOT NULL,
	SLOC         	NUMBER NULL,
	LANGUAGE_ID  	NUMBER NULL,
	METHOD_ID    	NUMBER NULL,
	LAST_UPDATE  	DATE NULL,
	NOTE         	VARCHAR2(600) NULL 
	)
/
COMMENT ON TABLE CONVERSION IS 'Convection rate between SLOC, Language and estimation methods (Insight)'
/
CREATE TABLE CSS_NORM ( 
	GROUP_ID   	NUMBER NOT NULL,
	NORMPLAN_ID	NUMBER NOT NULL,
	LCL        	NUMBER NULL,
	AVERRATE   	NUMBER NULL,
	UCL        	NUMBER NULL 
	)
/
CREATE TABLE CUS_METRICS ( 
	CODE         	NUMBER NOT NULL,
	NAME         	VARCHAR2(150) NULL,
	UNIT         	VARCHAR2(150) NULL,
	PLANNED_VALUE	NUMBER NULL,
	ACTUAL_VALUE 	NUMBER NULL,
	NOTE         	VARCHAR2(600) NULL,
	PROJECT_ID   	NUMBER(10,0) NULL,
	LCL          	NUMBER NULL,
	UCL          	NUMBER NULL,
	CAUSAL       	VARCHAR2(600) NULL 
	)
/
COMMENT ON TABLE CUS_METRICS IS 'Project''s custom metrics (Insight)'
/
CREATE TABLE CUS_POINT ( 
	CUS_POINT_ID	NUMBER NOT NULL,
	MILESTONE_ID	NUMBER NOT NULL,
	CODE        	NUMBER NOT NULL,
	POINT       	NUMBER NULL 
	)
/
CREATE TABLE CUSTOMER ( 
	CUSTOMER_ID    	NUMBER(22,0) NOT NULL,
	CUS_NAME       	VARCHAR2(255) NULL,
	PARENT_ID      	NUMBER(22,0) NULL,
	CUS_DESCRIPTION	VARCHAR2(600) NULL,
	CUS_NOTE       	VARCHAR2(600) NULL,
	OG             	VARCHAR2(600) NULL 
	)
/
CREATE TABLE DAR_PLAN ( 
	DAR_PLAN_ID	NUMBER NOT NULL,
	PROJECT_ID 	NUMBER NOT NULL,
	DEVLOPER_ID	NUMBER NULL,
	DAR_ITEM   	VARCHAR2(300) NOT NULL,
	PLAN_DATE  	DATE NOT NULL,
	ACTUAL_DATE	DATE NULL,
	DAR_CAUSE  	VARCHAR2(900) NULL 
	)
/
CREATE TABLE DEF$_TEMP$LOB ( 
	TEMP$BLOB 	BLOB NULL,
	TEMP$CLOB 	CLOB NULL,
	TEMP$NCLOB	NCLOB NULL 
	)
/
COMMENT ON TABLE DEF$_TEMP$LOB IS 'Storage for LOB parameters to RPCs'
/
COMMENT ON COLUMN DEF$_TEMP$LOB.TEMP$BLOB IS 'Binary LOB (deferred) RPC parameter'
/
COMMENT ON COLUMN DEF$_TEMP$LOB.TEMP$CLOB IS 'Character LOB (deferred) RPC parameter'
/
COMMENT ON COLUMN DEF$_TEMP$LOB.TEMP$NCLOB IS 'National Character LOB (deferred) RPC parameter'
/
CREATE TABLE DEFECT_ARCHIVE ( 
	DEFECT_ID     	NUMBER NOT NULL,
	PROJECT_ID    	NUMBER NOT NULL,
	CREATED_BY    	VARCHAR2(60) NOT NULL,
	CREATE_DATE   	DATE NOT NULL,
	UPDATED_BY    	VARCHAR2(60) NULL,
	TITLE         	VARCHAR2(450) NOT NULL,
	ASSIGNED_TO   	VARCHAR2(60) NULL,
	DS_ID         	NUMBER NULL,
	WP_ID         	NUMBER NULL,
	DEFS_ID       	NUMBER NULL,
	MODULE_ID     	NUMBER NULL,
	AT_ID         	NUMBER NULL,
	DP_ID         	NUMBER NULL,
	DT_ID         	NUMBER NULL,
	QA_ID         	NUMBER NULL,
	PROCESS_ID    	NUMBER NULL,
	SD_ID         	NUMBER NULL,
	SI_ID         	NUMBER NULL,
	DUE_DATE      	DATE NULL,
	CLOSE_DATE    	DATE NULL,
	DESCRIPTION   	VARCHAR2(3600) NOT NULL,
	SOLUTION      	VARCHAR2(3600) NULL,
	PROJECT_ORIGIN	VARCHAR2(150) NULL,
	IMAGE         	VARCHAR2(30) NULL,
	REFERENCE     	VARCHAR2(90) NULL,
	FIXED_DATE    	DATE NULL,
	CAUSE_ANALYSIS	VARCHAR2(3600) NULL,
	TEST_CASE     	VARCHAR2(100) NULL 
	)
/
CREATE TABLE DEFECT_ATTACHMENT ( 
	ATTACHMENT_ID	NUMBER NOT NULL,
	DEFECT_ID    	NUMBER NULL,
	NAME         	VARCHAR2(80) NOT NULL,
	DEVELOPER_ID 	NUMBER NULL,
	CONTENT      	BLOB DEFAULT EMPTY_BLOB() NULL,
	CONTENT_SIZE 	NUMBER(8,0) NULL,
	CONVERTED    	NUMBER(1,0) NULL 
	)
/
COMMENT ON TABLE DEFECT_ATTACHMENT IS 'DMS: Store attachmnents of defect in BLOB format'
/
COMMENT ON COLUMN DEFECT_ATTACHMENT.NAME IS 'File name'
/
COMMENT ON COLUMN DEFECT_ATTACHMENT.DEVELOPER_ID IS 'Attachment owner'
/
COMMENT ON COLUMN DEFECT_ATTACHMENT.CONTENT IS 'Attachment file'
/
COMMENT ON COLUMN DEFECT_ATTACHMENT.CONTENT_SIZE IS 'Attachment size in bytes'
/
CREATE TABLE DEFECT_DISTRIBUTION_BY_PROCESS ( 
	PROCESS_ID  	NUMBER NOT NULL,
	LIFECYCLE_ID	NUMBER NOT NULL,
	VALUE       	NUMBER NULL 
	)
/
CREATE TABLE DEFECT_HISTORY ( 
	DEFECT_ID	NUMBER NOT NULL,
	HISTORY  	VARCHAR2(1024) NULL 
	)
/
COMMENT ON TABLE DEFECT_HISTORY IS 'Defect history tracking, for track status changes'
/
COMMENT ON COLUMN DEFECT_HISTORY.HISTORY IS 'History lines, seperated by EOL'
/
CREATE TABLE DEFECT_PERMISSION ( 
	PROJECT_ID  	NUMBER NOT NULL,
	DEVELOPER_ID	NUMBER NOT NULL,
	STATUS      	VARCHAR2(1) NOT NULL,
	POSITION    	VARCHAR2(10) NOT NULL 
	)
/
COMMENT ON TABLE DEFECT_PERMISSION IS 'DMS permission assignments for project, independent from Assignment of project'
/
COMMENT ON COLUMN DEFECT_PERMISSION.STATUS IS 'Active/Inactive'
/
COMMENT ON COLUMN DEFECT_PERMISSION.POSITION IS 'PL/Dev/Tester'
/
CREATE TABLE DEFECT_PLAN ( 
	DP_ID     	NUMBER NOT NULL,
	PROJECT_ID	NUMBER NOT NULL,
	WP_ID     	NUMBER NULL,
	MODULE_ID 	NUMBER NULL,
	QA_ID     	NUMBER NULL,
	VALUE     	NUMBER NOT NULL 
	)
/
COMMENT ON TABLE DEFECT_PLAN IS 'Used to plan, track and measure the review and testing activities'
/
CREATE TABLE DEFECT_PRIORITY ( 
	DP_ID	NUMBER NOT NULL,
	NAME 	VARCHAR2(90) NOT NULL 
	)
/
COMMENT ON TABLE DEFECT_PRIORITY IS '(DMS)'
/
CREATE TABLE DEFECT_PRODUCT_PLAN ( 
	PROJECT_ID     	NUMBER NOT NULL,
	WP_ID          	NUMBER NOT NULL,
	MODULE_ID      	NUMBER NOT NULL,
	QA_ID          	NUMBER NULL,
	QA_TYPE        	NUMBER NULL,
	RATE_PLAN_VALUE	NUMBER NULL,
	PLAN_VALUE     	NUMBER NULL,
	REPLAN_VALUE   	NUMBER NULL 
	)
/
CREATE TABLE DEFECT_QUERY ( 
	QUERY_ID    	NUMBER NOT NULL,
	DEVELOPER_ID	NUMBER NOT NULL,
	PROJECT_ID  	NUMBER NOT NULL,
	TITLE       	VARCHAR2(30) NOT NULL,
	SCOPE       	VARCHAR2(1) NOT NULL,
	SQL_TEXT    	VARCHAR2(1500) NULL 
	)
/
COMMENT ON TABLE DEFECT_QUERY IS 'Store defect queries as SQL conditions'
/
COMMENT ON COLUMN DEFECT_QUERY.DEVELOPER_ID IS 'Owner'
/
COMMENT ON COLUMN DEFECT_QUERY.SCOPE IS 'Public/Private'
/
COMMENT ON COLUMN DEFECT_QUERY.SQL_TEXT IS 'SQL conditions'
/
CREATE TABLE DEFECT_SEVERITY ( 
	DEFS_ID	NUMBER NOT NULL,
	NAME   	VARCHAR2(90) NOT NULL,
	WEIGHT 	NUMBER(3,0) NULL 
	)
/
COMMENT ON TABLE DEFECT_SEVERITY IS 'Store defect severity and weighted'
/
CREATE TABLE DEFECT_STATUS ( 
	DS_ID	NUMBER NOT NULL,
	NAME 	VARCHAR2(90) NOT NULL 
	)
/
COMMENT ON TABLE DEFECT_STATUS IS '(DMS)'
/
CREATE TABLE DEFECT_TYPE ( 
	DT_ID	NUMBER NOT NULL,
	NAME 	VARCHAR2(90) NOT NULL 
	)
/
COMMENT ON TABLE DEFECT_TYPE IS '(DMS)'
/
CREATE TABLE DEFECT ( 
	DEFECT_ID     	NUMBER NOT NULL,
	PROJECT_ID    	NUMBER NOT NULL,
	CREATED_BY    	VARCHAR2(60) NOT NULL,
	CREATE_DATE   	DATE NOT NULL,
	UPDATED_BY    	VARCHAR2(60) NULL,
	TITLE         	VARCHAR2(450) NOT NULL,
	ASSIGNED_TO   	VARCHAR2(60) NULL,
	DS_ID         	NUMBER NULL,
	WP_ID         	NUMBER NULL,
	DEFS_ID       	NUMBER NULL,
	MODULE_ID     	NUMBER NULL,
	AT_ID         	NUMBER NULL,
	DP_ID         	NUMBER NULL,
	DT_ID         	NUMBER NULL,
	QA_ID         	NUMBER NULL,
	PROCESS_ID    	NUMBER NULL,
	SD_ID         	NUMBER NULL,
	SI_ID         	NUMBER NULL,
	DUE_DATE      	DATE NULL,
	CLOSE_DATE    	DATE NULL,
	DESCRIPTION   	VARCHAR2(3600) NOT NULL,
	SOLUTION      	VARCHAR2(3600) NULL,
	PROJECT_ORIGIN	VARCHAR2(150) NULL,
	IMAGE         	VARCHAR2(30) NULL,
	REFERENCE     	VARCHAR2(90) NULL,
	FIXED_DATE    	DATE NULL,
	CAUSE_ANALYSIS	VARCHAR2(3600) NULL,
	TEST_CASE     	VARCHAR2(100) NULL,
	DEFECT_OWNER  	VARCHAR2(60) NULL 
	)
/
COMMENT ON TABLE DEFECT IS 'DMS: Defect tracking'
/
COMMENT ON COLUMN DEFECT.UPDATED_BY IS 'Last updated user'
/
COMMENT ON COLUMN DEFECT.DS_ID IS 'Defect status'
/
COMMENT ON COLUMN DEFECT.WP_ID IS 'Work product'
/
COMMENT ON COLUMN DEFECT.DEFS_ID IS 'Defect severity'
/
COMMENT ON COLUMN DEFECT.AT_ID IS 'Activity type'
/
COMMENT ON COLUMN DEFECT.DP_ID IS 'Defect priotity'
/
COMMENT ON COLUMN DEFECT.DT_ID IS 'Defect type'
/
COMMENT ON COLUMN DEFECT.QA_ID IS 'QC Activity'
/
COMMENT ON COLUMN DEFECT.SD_ID IS 'Stage Detected'
/
COMMENT ON COLUMN DEFECT.SI_ID IS 'Stage injected'
/
COMMENT ON COLUMN DEFECT.IMAGE IS 'Attach picture file name, deprecated'
/
CREATE TABLE DEPENDENCIES ( 
	DEPENDENCY_ID        	NUMBER NOT NULL,
	PROJECT_PLAN_ID      	NUMBER NULL,
	NOTE                 	VARCHAR2(600) NULL,
	ACTUAL_DELIVERY_DATE 	DATE NULL,
	PLANNED_DELIVERY_DATE	DATE NULL,
	ITEM                 	VARCHAR2(600) NULL 
	)
/
COMMENT ON TABLE DEPENDENCIES IS 'Project dependencies (Insight)'
/
CREATE TABLE DEVELOPER ( 
	DEVELOPER_ID       	NUMBER NOT NULL,
	NAME               	VARCHAR2(255) NOT NULL,
	GROUP_NAME         	VARCHAR2(30) NOT NULL,
	ACCOUNT            	VARCHAR2(60) NULL,
	DESIGNATION        	VARCHAR2(90) NULL,
	ROLE               	VARCHAR2(10) NULL,
	PASSWORD           	VARCHAR2(255) NULL,
	STATUS             	NUMBER NULL,
	EMAIL              	VARCHAR2(80) NULL,
	BEGIN_DATE         	DATE NULL,
	QUIT_DATE          	DATE NULL,
	ORG_POSITION_CODE  	VARCHAR2(100) NULL,
	UNIT_ID            	NUMBER(22,0) NULL,
	USER_TYPE_CODE     	VARCHAR2(100) NULL,
	LOCATION           	VARCHAR2(50) NULL,
	PHONE_NO           	VARCHAR2(16) NULL,
	ALTERNATIVE_EMAIL  	VARCHAR2(80) NULL,
	PASSWORD_HINT      	VARCHAR2(100) NULL,
	DISABLED           	NUMBER(1,0) NULL,
	PASSWORD_DATE      	DATE NULL,
	CHANGE_PW          	NUMBER(1,0) NULL,
	ACCOUNT_EXPIRED    	CHAR(1) NULL,
	ACCOUNT_LOCKED     	CHAR(1) NULL,
	CREDENTIALS_EXPIRED	CHAR(1) NULL,
	PASSWORD_BACKUP    	VARCHAR2(255) NULL,
	STAFF_ID           	VARCHAR2(60) NULL 
	)
/
COMMENT ON TABLE DEVELOPER IS 'User profiles, using with the whole FMS packages'
/
COMMENT ON COLUMN DEVELOPER.ROLE IS '10 binary numbers scheme'
/
COMMENT ON COLUMN DEVELOPER.EMAIL IS 'Used for email features (Call Log)'
/
CREATE TABLE DPLOG ( 
	DPACTIONID  	NUMBER NOT NULL,
	WORKUNITID  	NUMBER NOT NULL,
	DPACTION    	VARCHAR2(300) NULL,
	DPCODE      	VARCHAR2(100) NULL,
	PROCESSID   	NUMBER NULL,
	COMMDEFCODE 	VARCHAR2(100) NULL,
	CREATEDATE  	DATE NULL,
	TARGETDATE  	DATE NULL,
	CLOSEDDATE  	DATE NULL,
	DPSTATUS    	NUMBER(1,0) NULL,
	DPBENEFIT   	VARCHAR2(300) NULL,
	DPNOTE      	VARCHAR2(300) NULL,
	DEVELOPER_ID	NUMBER NULL 
	)
/
COMMENT ON TABLE DPLOG IS 'Defect prevention logs (Insight)'
/
CREATE TABLE DPTASK ( 
	DPTASKID 	NUMBER NOT NULL,
	PROJECTID	NUMBER NOT NULL,
	DPTASK   	VARCHAR2(300) NOT NULL,
	DPUNIT   	VARCHAR2(150) NULL,
	DPPLAN   	NUMBER NULL,
	DPACTUAL 	NUMBER NULL,
	DP_CAUSE 	VARCHAR2(900) NULL,
	USL      	NUMBER(10,5) NULL,
	LSL      	NUMBER(10,5) NULL 
	)
/
COMMENT ON TABLE DPTASK IS 'Defect prevention tasks (Insight)'
/
CREATE TABLE DUAL ( 
	DUMMY	VARCHAR2(1) NULL 
	)
/
CREATE TABLE EST_DEFECT ( 
	EST_DEFECT_ID	NUMBER NOT NULL,
	PROJECT_ID   	NUMBER NULL,
	REVIEW_TEST  	VARCHAR2(255) NULL,
	TARGET       	NUMBER NULL,
	BASIC_EST    	VARCHAR2(600) NULL 
	)
/
CREATE TABLE EST_EFFORT ( 
	PROJECT_ID  	NUMBER NULL,
	MILESTONE_ID	NUMBER NULL,
	PROCESS_NAME	VARCHAR2(255) NULL,
	PLAN_VALUE  	NUMBER NULL 
	)
/
CREATE TABLE ESTIMATION_METHOD ( 
	METHOD_ID 	NUMBER NOT NULL,
	NAME      	VARCHAR2(150) NULL,
	NOTE      	VARCHAR2(600) NULL,
	ISRELEVANT	NUMBER NULL 
	)
/
COMMENT ON TABLE ESTIMATION_METHOD IS '(Insight)'
/
CREATE TABLE EXEMPTION_MIGRATE ( 
	EXEMPTION_ID	NUMBER NULL,
	TYPE        	VARCHAR2(10) NULL 
	)
/
CREATE TABLE FINANCE_PLAN ( 
	PROJECT_ID  	NUMBER NULL,
	WEEK        	NUMBER NULL,
	MONTH       	NUMBER NULL,
	YEAR        	NUMBER NULL,
	FINANCE_NAME	VARCHAR2(255) NULL,
	PLAN_VALUE  	NUMBER NULL 
	)
/
CREATE TABLE FINANCIAL_PLAN ( 
	INVOICE_SCHEDULE_ID	NUMBER NOT NULL,
	PROJECT_PLAN_ID    	NUMBER NULL,
	DUE_DATE           	DATE NULL,
	VALUE              	NUMBER NULL,
	CONDITIONS         	VARCHAR2(600) NULL,
	ITEM               	VARCHAR2(150) NULL,
	ACTUAL_DATE        	DATE NULL,
	TYPE               	NUMBER NULL 
	)
/
COMMENT ON TABLE FINANCIAL_PLAN IS 'Project''s finances (Insight)'
/
CREATE TABLE FMSCACHE ( 
	KEY  	VARCHAR2(50) NOT NULL,
	TYPE 	NUMBER(2,0) NOT NULL,
	VALUE	NUMBER NULL,
	KEY2 	NUMBER NULL 
	)
/
COMMENT ON COLUMN FMSCACHE.KEY IS 'links to whatever, depending on the type. Only use the key value if needed to retrieve a group of values'
/
COMMENT ON COLUMN FMSCACHE.TYPE IS 'Type of data being cached, type 1= PCB actual values'
/
COMMENT ON COLUMN FMSCACHE.KEY2 IS 'Use to distinguish single values in a group of values'
/
CREATE TABLE FURTHER_WORK ( 
	FURTHER_WORK_ID	NUMBER NOT NULL,
	NAME           	VARCHAR2(150) NULL,
	RESULT         	VARCHAR2(600) NULL,
	TIME           	NUMBER NULL,
	RESPONSIBILITY 	VARCHAR2(600) NULL,
	NOTE           	VARCHAR2(600) NULL,
	PROJECT_ID     	NUMBER NULL 
	)
/
COMMENT ON TABLE FURTHER_WORK IS 'Project''s post-mortem tasks (Insight)'
/
CREATE TABLE GENERAL_REFERENCE ( 
	GENERAL_REF_ID	NUMBER(22,0) NOT NULL,
	GROUP_CODE    	VARCHAR2(100) NULL,
	ITEM_CODE     	VARCHAR2(100) NULL,
	LANG_CODE     	VARCHAR2(30) NULL,
	DESCRIPTION   	VARCHAR2(500) NULL,
	DISABLED      	NUMBER(2,0) NULL 
	)
/
CREATE TABLE GROUPS ( 
	GROUP_ID        	NUMBER NOT NULL,
	GROUPNAME       	VARCHAR2(150) NOT NULL,
	ISOPERATIONGROUP	NUMBER NULL,
	LEADER          	NUMBER NULL,
	DESCRIPTION     	VARCHAR2(4000) NULL 
	)
/
COMMENT ON TABLE GROUPS IS 'List of organization groups, effect to all FMS packages'
/
COMMENT ON COLUMN GROUPS.GROUP_ID IS 'ID'
/
COMMENT ON COLUMN GROUPS.ISOPERATIONGROUP IS 'can be support group as well'
/
CREATE TABLE HELP ( 
	TOPIC	VARCHAR2(50) NOT NULL,
	SEQ  	NUMBER NOT NULL,
	INFO 	VARCHAR2(80) NULL 
	)
/
CREATE TABLE HOLIDAY_TYPE ( 
	HOLIDAY_TYPE_CODE	VARCHAR2(30) NOT NULL,
	DESCRIPTION      	VARCHAR2(255) NOT NULL 
	)
/
CREATE TABLE HOLIDAY_UNIT ( 
	UNIT_ID   	NUMBER(22,0) NOT NULL,
	HOLIDAY_ID	NUMBER(22,0) NOT NULL 
	)
/
CREATE TABLE HOLIDAY ( 
	HOLIDAY_ID        	NUMBER(22,0) NOT NULL,
	HOLIDAY_START_DATE	DATE NULL,
	HOLIDAY_END_DATE  	DATE NULL,
	DESCRIPTION       	VARCHAR2(255) NULL,
	IS_FULLTIME       	NUMBER(2,0) NULL,
	HOLIDAY_TYPE_CODE 	VARCHAR2(30) NULL,
	DISABLED          	NUMBER(2,0) NULL 
	)
/
CREATE TABLE INTERFACE ( 
	INTERFACE_ID      	NUMBER NOT NULL,
	PROJECT_PLAN_ID   	NUMBER NULL,
	NAME              	VARCHAR2(50) NULL,
	POSITION          	VARCHAR2(150) NULL,
	RESPONSIBILITY    	VARCHAR2(600) NULL,
	CONTACT           	VARCHAR2(600) NULL,
	TYPE              	NUMBER NULL,
	ASSIGN_TO_ID      	NUMBER NULL,
	ROLE_ID           	NUMBER NULL,
	COMMUNICATION     	VARCHAR2(600) NULL,
	DEPARTMENT        	VARCHAR2(600) NULL,
	DEPENDENCY        	VARCHAR2(600) NULL,
	CONTACT_PERSON    	VARCHAR2(600) NULL,
	FUNCTION          	VARCHAR2(600) NULL,
	OTHER_PROJECT_NAME	VARCHAR2(600) NULL,
	CONTACT_ACC       	VARCHAR2(100) NULL 
	)
/
COMMENT ON TABLE INTERFACE IS 'Project''s interface (Insight)'
/
CREATE TABLE ISSUE ( 
	ISSUEID    	NUMBER(10,0) NOT NULL,
	WORKUNITID 	NUMBER NOT NULL,
	DESCRIPTION	VARCHAR2(750) NOT NULL,
	STATUSID   	NUMBER(5,0) NOT NULL,
	PRIORITYID 	NUMBER(5,0) NOT NULL,
	TYPEID     	NUMBER(5,0) NOT NULL,
	OWNER      	VARCHAR2(50) NULL,
	STARTDATE  	DATE NULL,
	DUEDATE    	DATE NULL,
	COMMENTS   	VARCHAR2(750) NULL,
	CLOSEDDATE 	DATE NULL,
	REFERENCE  	VARCHAR2(400) NULL,
	CREATOR    	VARCHAR2(50) NULL,
	RISKID     	NUMBER NULL,
	PROCESS_ID 	NUMBER(3,0) NULL,
	WU_ID      	NUMBER NULL 
	)
/
COMMENT ON TABLE ISSUE IS '(Insight)'
/
COMMENT ON COLUMN ISSUE.WORKUNITID IS 'Owner WU'
/
COMMENT ON COLUMN ISSUE.RISKID IS 'When Issues are generated from occured risks'
/
COMMENT ON COLUMN ISSUE.WU_ID IS 'the wu the issue is related to (see PQA issues)'
/
CREATE TABLE ITERATION ( 
	ITERATION_ID   	NUMBER NOT NULL,
	DESCRIPTION    	VARCHAR2(1500) NULL,
	MILESTONE      	VARCHAR2(600) NULL,
	MILESTONE_ID   	NUMBER NULL,
	ITERATION      	NUMBER NULL,
	PLAN_END_DATE  	DATE NULL,
	REPLAN_END_DATE	DATE NULL,
	ACTUAL_END_DATE	DATE NULL 
	)
/
COMMENT ON TABLE ITERATION IS 'Stages iterations (Insight)'
/
CREATE TABLE KPA ( 
	KPA_ID	NUMBER NOT NULL,
	NAME  	VARCHAR2(3) NOT NULL 
	)
/
COMMENT ON TABLE KPA IS 'KPA, using with Timesheet'
/
CREATE TABLE LANGUAGE_CODE ( 
	LANG_CODE  	VARCHAR2(30) NOT NULL,
	DESCRIPTION	VARCHAR2(2000) NULL 
	)
/
CREATE TABLE LANGUAGE ( 
	LANGUAGE_ID     	NUMBER NOT NULL,
	NAME            	VARCHAR2(50) NULL,
	NOTE            	VARCHAR2(600) NULL,
	CONV_LAST_UPDATE	DATE NULL,
	SIZE_UNIT       	VARCHAR2(10) NOT NULL,
	ISRELEVANT      	NUMBER NULL 
	)
/
COMMENT ON TABLE LANGUAGE IS 'languages used to estimate products size(Insight)'
/
COMMENT ON COLUMN LANGUAGE.SIZE_UNIT IS 'used for quantifying the language'
/
COMMENT ON COLUMN LANGUAGE.ISRELEVANT IS 'most used languages'
/
CREATE TABLE LIFECYCLE ( 
	LIFECYCLE_ID	NUMBER NOT NULL,
	NAME        	VARCHAR2(150) NULL 
	)
/
COMMENT ON TABLE LIFECYCLE IS 'Project lifecycle'
/
CREATE TABLE MEASUREMENTS_PROGRAM ( 
	MES_ID         	NUMBER NOT NULL,
	MES_PRJ_ID     	NUMBER NOT NULL,
	MES_DATA_COLECT	VARCHAR2(600) NOT NULL,
	MES_PURPOSE    	VARCHAR2(600) NOT NULL,
	MES_RESPONSIBLE	VARCHAR2(600) NOT NULL,
	MES_WHEN       	VARCHAR2(600) NOT NULL 
	)
/
CREATE TABLE METRIC_DES ( 
	METRIC_ID    	CHAR(10) NOT NULL,
	METRIC_NAME  	VARCHAR2(150) NULL,
	UNIT         	VARCHAR2(30) NULL,
	DISPLAY_INDEX	NUMBER(10,0) NULL,
	HOT_PRIORITY 	NUMBER(10,0) NULL,
	COLOR_TYPE   	VARCHAR2(1) NULL,
	MGROUP_ID    	NUMBER NULL,
	METRIC_DESC  	VARCHAR2(600) NULL,
	ID           	NUMBER NOT NULL 
	)
/
COMMENT ON TABLE METRIC_DES IS '(Insight) Metric definitions, descriptions'
/
COMMENT ON COLUMN METRIC_DES.COLOR_TYPE IS 'wether high value means good or bad'
/
COMMENT ON COLUMN METRIC_DES.MGROUP_ID IS 'metricgroup table'
/
CREATE TABLE METRICGROUP ( 
	MGROUP_ID	NUMBER NOT NULL,
	GROUPNAME	VARCHAR2(30) NOT NULL,
	PARENT_ID	NUMBER NULL 
	)
/
COMMENT ON TABLE METRICGROUP IS 'Group of metrics, used in PCB (Insight)'
/
CREATE TABLE METRICS ( 
	CODE         	NUMBER(10,0) NOT NULL,
	PROJECT_CODE 	VARCHAR2(20) NULL,
	PLANNED_VALUE	NUMBER(10,5) NULL,
	ACTUAL_VALUE 	NUMBER(10,5) NULL,
	METRIC_INDEX 	NUMBER NOT NULL,
	REPORT_DATE  	DATE NULL,
	NOTE         	VARCHAR2(600) NULL,
	CAUSAL       	VARCHAR2(600) NULL,
	USL          	NUMBER(10,5) NULL,
	LSL          	NUMBER(10,5) NULL 
	)
/
COMMENT ON TABLE METRICS IS 'Used for metric values that need to be input from user(Insight). Avoid using this table as much as possible'
/
CREATE TABLE MILESTONE ( 
	MILESTONE_ID            	NUMBER NOT NULL,
	PROJECT_ID              	NUMBER NOT NULL,
	NAME                    	VARCHAR2(90) NOT NULL,
	COMPLETE                	NUMBER NOT NULL,
	BASE_START_DATE         	DATE NULL,
	PLAN_START_DATE         	DATE NULL,
	ACTUAL_START_DATE       	DATE NULL,
	BASE_FINISH_DATE        	DATE NULL,
	PLAN_FINISH_DATE        	DATE NULL,
	ACTUAL_FINISH_DATE      	DATE NULL,
	BASE_EFFORT             	NUMBER NULL,
	PLAN_EFFORT             	NUMBER NULL,
	ACTUAL_EFFORT           	NUMBER NULL,
	DESCRIPTION             	VARCHAR2(1200) NULL,
	STAGE_ID                	NUMBER NULL,
	MILESTONE               	VARCHAR2(600) NULL,
	COMMENTS                	CLOB NULL,
	STANDARDSTAGE           	NUMBER NULL,
	PROJECTSIZE             	NUMBER NULL,
	EFFEFECTIVENESS         	NUMBER NULL,
	CUSTOMERSATISFACTION    	NUMBER NULL,
	ACCEPTANCEOFDELIVERABLES	NUMBER NULL,
	REQUIREMENTCOMPLETENESS 	NUMBER NULL,
	TIMELINESS              	NUMBER NULL,
	LEAKAGE                 	NUMBER NULL,
	CORRECTIONCOST          	NUMBER NULL,
	PROCESSCOMPLIANCE       	NUMBER NULL,
	WORKORDER               	NUMBER NULL,
	ACCEPTANCENOTE          	NUMBER NULL,
	PROJECTPLAN             	NUMBER NULL,
	PROJECTREPORTS          	NUMBER NULL,
	PRESTIGE                	NUMBER NULL,
	PROJECTPOINT            	NUMBER NULL,
	PROJECTEVAL             	VARCHAR2(10) NULL,
	CUSPOINT                	NUMBER NULL,
	CONDUCTOR               	NUMBER NULL,
	EFFORTEFFICIENCY        	NUMBER NULL,
	OVERDUENCSOBS           	NUMBER NULL 
	)
/
COMMENT ON TABLE MILESTONE IS 'Project Stages (Insight,Dashboard)'
/
COMMENT ON COLUMN MILESTONE.BASE_EFFORT IS 'deprecated, use plan_PROCESS_STAGE instead'
/
COMMENT ON COLUMN MILESTONE.PLAN_EFFORT IS 'deprecated, use plan_PROCESS_STAGE instead'
/
COMMENT ON COLUMN MILESTONE.STANDARDSTAGE IS '1-I, 2-D, 3-S, 4-C, 5-T, 6-Te'
/
COMMENT ON COLUMN MILESTONE.PROJECTSIZE IS 'Project points'
/
COMMENT ON COLUMN MILESTONE.EFFEFECTIVENESS IS 'Project points'
/
COMMENT ON COLUMN MILESTONE.CUSTOMERSATISFACTION IS 'Project points'
/
COMMENT ON COLUMN MILESTONE.ACCEPTANCEOFDELIVERABLES IS 'Project points'
/
COMMENT ON COLUMN MILESTONE.REQUIREMENTCOMPLETENESS IS 'Project points'
/
COMMENT ON COLUMN MILESTONE.TIMELINESS IS 'Project points'
/
COMMENT ON COLUMN MILESTONE.LEAKAGE IS 'Project points'
/
COMMENT ON COLUMN MILESTONE.CORRECTIONCOST IS 'Project points'
/
COMMENT ON COLUMN MILESTONE.PROCESSCOMPLIANCE IS 'Project points'
/
COMMENT ON COLUMN MILESTONE.WORKORDER IS 'Project points'
/
COMMENT ON COLUMN MILESTONE.ACCEPTANCENOTE IS 'Project points'
/
COMMENT ON COLUMN MILESTONE.PROJECTPLAN IS 'Project points'
/
COMMENT ON COLUMN MILESTONE.PROJECTREPORTS IS 'Project points'
/
COMMENT ON COLUMN MILESTONE.PRESTIGE IS 'Project points'
/
COMMENT ON COLUMN MILESTONE.PROJECTPOINT IS 'Project points'
/
COMMENT ON COLUMN MILESTONE.PROJECTEVAL IS 'Project points'
/
COMMENT ON COLUMN MILESTONE.CUSPOINT IS 'Project points'
/
CREATE TABLE MODULE ( 
	MODULE_ID             	NUMBER NOT NULL,
	PROJECT_ID            	NUMBER NOT NULL,
	NAME                  	VARCHAR2(500) NOT NULL,
	WP_ID                 	NUMBER NULL,
	PLANNED_DEFECT        	NUMBER NULL,
	REPLANNED_DEFECT      	NUMBER NULL,
	PLANNED_REVIEW_DATE   	DATE NULL,
	PLANNED_RELEASE_DATE  	DATE NULL,
	PLANNED_TEST_END_DATE 	DATE NULL,
	PLANNED_SIZE          	NUMBER NULL,
	REPLANNED_SIZE        	NUMBER NULL,
	ACTUAL_REVIEW_DATE    	DATE NULL,
	ACTUAL_RELEASE_DATE   	DATE NULL,
	ACTUAL_TEST_END_DATE  	DATE NULL,
	ACTUAL_SIZE           	NUMBER NULL,
	REUSE                 	NUMBER NULL,
	IS_DELIVERABLE        	NUMBER NULL,
	DELIVERY_LOCATION     	VARCHAR2(150) NULL,
	NOTE                  	VARCHAR2(1800) NULL,
	STATUS                	NUMBER NULL,
	COMMITED_DELIVERY_DATE	DATE NULL,
	ACTUAL_DELIVERY_DATE  	DATE NULL,
	CONDUCTOR             	VARCHAR2(150) NULL,
	REVIEWERS             	VARCHAR2(600) NULL,
	APPROVERS             	VARCHAR2(600) NULL,
	PLANNED_SIZE_UNIT_ID  	NUMBER NULL,
	ACTUAL_SIZE_UNIT_ID   	NUMBER NULL,
	PLANNED_SIZE_TYPE     	NUMBER NULL,
	ACTUAL_SIZE_TYPE      	NUMBER NULL,
	REPLANNED_RELEASE_DATE	DATE NULL,
	BASELINE              	VARCHAR2(150) NULL,
	BASELINE_STATUS       	NUMBER(1,0) NULL,
	BASELINE_NOTE         	VARCHAR2(600) NULL,
	REPLAN_DEFECT_RATE    	NUMBER NULL,
	NOTE_DEFECT_RATE      	VARCHAR2(300) NULL,
	REASION               	VARCHAR2(600) NULL,
	ACTION                	VARCHAR2(600) NULL,
	WORKPRODUCT_CODE      	VARCHAR2(100) NULL,
	NEW_PLAN_SIZE_TEST    	NUMBER NULL,
	NEW_PLAN_SIZE_REV     	NUMBER NULL,
	IS_DEFECT_REVIEW      	NUMBER DEFAULT 0 NULL,
	IS_DEFECT_TEST        	NUMBER DEFAULT 0 NULL 
	)
/
COMMENT ON TABLE MODULE IS 'Project products (Insight)'
/
COMMENT ON COLUMN MODULE.STATUS IS '1 Pending, 2 Accepted,  3 Rejected, 4 Cancelled'
/
COMMENT ON COLUMN MODULE.PLANNED_SIZE_UNIT_ID IS 'links to table Estimation mothod or table language depending on size type'
/
COMMENT ON COLUMN MODULE.ACTUAL_SIZE_UNIT_ID IS 'links to table Estimation mothod or table language depending on size type'
/
COMMENT ON COLUMN MODULE.PLANNED_SIZE_TYPE IS '1-estimation method, 0-language'
/
COMMENT ON COLUMN MODULE.ACTUAL_SIZE_TYPE IS '1-estimation method, 0-language'
/
CREATE TABLE NC ( 
	NCID          	NUMBER NOT NULL,
	NCLEVEL       	NUMBER NOT NULL,
	PROJECTID     	VARCHAR2(20) NOT NULL,
	NCTYPE        	NUMBER NOT NULL,
	DETECTEDBY    	NUMBER NULL,
	CODE          	VARCHAR2(50) NULL,
	DESCRIPTION   	VARCHAR2(3000) NULL,
	CREATOR       	VARCHAR2(60) NOT NULL,
	CREATIONDATE  	DATE NOT NULL,
	STATUS        	NUMBER NULL,
	TYPEOFCAUSE   	NUMBER NULL,
	CAUSE         	VARCHAR2(3000) NULL,
	PROCESS       	NUMBER NULL,
	IMPACT        	VARCHAR2(3000) NULL,
	TYPEOFACTION  	NUMBER NULL,
	CPACTION      	VARCHAR2(3000) NULL,
	ASSIGNEE      	VARCHAR2(60) NULL,
	DEADLINE      	DATE NULL,
	REPEAT        	NUMBER NULL,
	NOTE          	VARCHAR2(3000) NULL,
	CLOSUREDATE   	DATE NULL,
	REVIEWER      	VARCHAR2(60) NULL,
	KPA           	NUMBER NULL,
	ISOCLAUSE     	NUMBER NULL,
	GROUPNAME     	VARCHAR2(30) NOT NULL,
	REVIEWDATE    	DATE NULL,
	UPDATED_BY    	VARCHAR2(60) NULL,
	EFFECTOFCHANGE	VARCHAR2(3000) NULL 
	)
/
COMMENT ON TABLE NC IS 'NC tracking (NCMS)'
/
COMMENT ON COLUMN NC.CODE IS 'Mandatory'
/
COMMENT ON COLUMN NC.REPEAT IS 'Yes/No'
/
COMMENT ON COLUMN NC.UPDATED_BY IS 'Last updated user'
/
CREATE TABLE NCCONSTANT ( 
	CONSTANTID 	NUMBER NOT NULL,
	TYPE       	VARCHAR2(30) NOT NULL,
	DESCRIPTION	VARCHAR2(255) NOT NULL,
	SYSTEMTYPE 	NUMBER NOT NULL,
	USAGE      	NUMBER NULL 
	)
/
COMMENT ON TABLE NCCONSTANT IS 'Store all constants of NCMS that used in combo boxes'
/
COMMENT ON COLUMN NCCONSTANT.DESCRIPTION IS 'Become a Type when it is System Type'
/
COMMENT ON COLUMN NCCONSTANT.USAGE IS 'NCMS/Call Log'
/
CREATE TABLE NCHISTORY ( 
	NCID   	NUMBER NOT NULL,
	HISTORY	VARCHAR2(1024) NULL 
	)
/
COMMENT ON TABLE NCHISTORY IS 'NCMS: NC history tracking, for track status changes'
/
CREATE TABLE NCPERMISSION ( 
	DEVELOPER_ID	NUMBER NOT NULL,
	TOOL        	NUMBER NOT NULL,
	ROLE        	VARCHAR2(10) NOT NULL 
	)
/
COMMENT ON TABLE NCPERMISSION IS 'User permissions in NCMS and Call Log'
/
COMMENT ON COLUMN NCPERMISSION.TOOL IS 'NCMS/Call Log'
/
COMMENT ON COLUMN NCPERMISSION.ROLE IS 'Inherit from Dashboard user creation'
/
CREATE TABLE NCVIEW ( 
	VIEWID 	NUMBER NOT NULL,
	TITLE  	VARCHAR2(255) NULL,
	FIELDS 	VARCHAR2(255) NULL,
	ORDERBY	VARCHAR2(50) NULL,
	ACCOUNT	VARCHAR2(20) NOT NULL 
	)
/
COMMENT ON TABLE NCVIEW IS 'NCMS personal list views'
/
COMMENT ON COLUMN NCVIEW.FIELDS IS 'Selected fields'
/
COMMENT ON COLUMN NCVIEW.ORDERBY IS 'Order field'
/
COMMENT ON COLUMN NCVIEW.ACCOUNT IS 'Owner'
/
CREATE TABLE NORMPLAN ( 
	NORMPLAN_ID 	NUMBER NOT NULL,
	END_DATE    	DATE NOT NULL,
	LASTUPDATE  	DATE NULL,
	LIFECYCLE_ID	NUMBER NOT NULL,
	WORKUNIT    	NUMBER NOT NULL 
	)
/
COMMENT ON TABLE NORMPLAN IS 'a group of norm values (Insight)'
/
COMMENT ON COLUMN NORMPLAN.LIFECYCLE_ID IS 'Used for software norms'
/
CREATE TABLE NORMS ( 
	VALUE      	NUMBER NULL,
	UCL        	NUMBER NULL,
	METRIC_ID  	NUMBER NOT NULL,
	LCL        	NUMBER NULL,
	NORMPLAN_ID	NUMBER NOT NULL 
	)
/
COMMENT ON TABLE NORMS IS 'Norm values (Insight)'
/
CREATE GLOBAL TEMPORARY TABLE ODCI_SECOBJ$ ( 
	IDXSCHEMA   	VARCHAR2(30) NULL,
	IDXNAME     	VARCHAR2(30) NULL,
	SECOBJSCHEMA	VARCHAR2(30) NULL,
	SECOBJNAME  	VARCHAR2(30) NULL 
	)
ON COMMIT PRESERVE ROWS
/
CREATE GLOBAL TEMPORARY TABLE ODCI_WARNINGS$ ( 
	C1	NUMBER NULL,
	C2	VARCHAR2(2000) NULL 
	)
ON COMMIT PRESERVE ROWS
/
CREATE TABLE OPENISSUE ( 
	OPENISSUE_ID	NUMBER NOT NULL,
	PROJECT_ID  	NUMBER NOT NULL,
	STARTDATE   	DATE NULL,
	ENDDATE     	DATE NULL,
	STATUS      	VARCHAR2(1) NULL,
	DESCRIPTION 	VARCHAR2(600) NOT NULL 
	)
/
COMMENT ON TABLE OPENISSUE IS '(Insight)'
/
CREATE TABLE ORG_PLAN_TOTAL ( 
	PROJECT_ID   	NUMBER NULL,
	ASSIGNMENT_ID	NUMBER NULL,
	TOTAL_PLAN   	NUMBER NULL 
	)
/
CREATE TABLE ORG_PLAN ( 
	PROJECT_ID   	NUMBER NULL,
	ASSIGNMENT_ID	NUMBER NULL,
	WEEK         	NUMBER NULL,
	MONTH        	NUMBER NULL,
	YEAR         	NUMBER NULL,
	PLAN_VALUE   	NUMBER NULL 
	)
/
CREATE TABLE ORGANIZATION ( 
	ORG_ID 	NUMBER NOT NULL,
	ORGNAME	VARCHAR2(100) NOT NULL 
	)
/
COMMENT ON TABLE ORGANIZATION IS 'Lists organizations (Insight)'
/
CREATE TABLE ORGPOINT ( 
	WORKUNIT_ID	NUMBER NOT NULL,
	YEAR       	NUMBER NULL,
	MONTH      	NUMBER NULL,
	PROJECT    	NUMBER NULL,
	PROPOSAL   	NUMBER NULL,
	REVENUE    	NUMBER NULL,
	NETINCOME  	NUMBER NULL,
	RECEIVABLE 	NUMBER NULL,
	LANGUAGE   	NUMBER NULL,
	EXPERIENCE 	NUMBER NULL,
	TURNOVER   	NUMBER NULL,
	TECHNOLOGY 	NUMBER NULL,
	RANK       	NUMBER NULL 
	)
/
COMMENT ON TABLE ORGPOINT IS 'Organization points (Insight)'
/
CREATE TABLE ORGPOINTBA ( 
	WORKUNIT_ID         	NUMBER NOT NULL,
	YEAR                	NUMBER NULL,
	MONTH               	NUMBER NULL,
	TIMELINESS          	NUMBER NULL,
	RESPONSETIME        	NUMBER NULL,
	BUDGETPERFORMANCE   	NUMBER NULL,
	BUSYRATE            	NUMBER NULL,
	CUSTOMERSATISFACTION	NUMBER NULL,
	VALUEACHIEVEMENT    	NUMBER NULL,
	LANGUAGEINDEX       	NUMBER NULL,
	TECHNOLOGYINDEX     	NUMBER NULL,
	RANK                	NUMBER NULL 
	)
/
CREATE TABLE OTHER_ACTIVITY ( 
	OTHER_ACTIVITY_ID  	NUMBER NOT NULL,
	PROJECT_PLAN_ID    	NUMBER NOT NULL,
	ACTIVITY           	VARCHAR2(600) NULL,
	PLANNED_START_DATE 	DATE NULL,
	PLANNED_END_DATE   	DATE NULL,
	ACTUAL_END_DATE    	DATE NULL,
	CONDUCTOR          	NUMBER NULL,
	NOTE               	VARCHAR2(600) NULL,
	TYPE               	NUMBER(2,0) DEFAULT NULL NULL,
	METRIC             	NUMBER NULL,
	STATUS             	NUMBER(1,0) NULL,
	RISK_ID            	NUMBER NULL,
	RISK_MITI_CONTIN_ID	NUMBER NULL,
	RISK_TYPE          	NUMBER NULL 
	)
/
COMMENT ON TABLE OTHER_ACTIVITY IS 'Other quality activities (Insigth)'
/
COMMENT ON COLUMN OTHER_ACTIVITY.METRIC IS 'Used for input the successfull TC coverage of final inspections'
/
CREATE TABLE OTHER_ASSIGNMENT ( 
	OA_ID       	NUMBER NOT NULL,
	DEVELOPER_ID	NUMBER NOT NULL,
	TYPE        	NUMBER(2,0) NOT NULL,
	FROM_DATE   	DATE NOT NULL,
	END_DATE    	DATE NOT NULL,
	DESCRIPTION 	VARCHAR2(600) NULL,
	USAGE       	NUMBER NULL 
	)
/
COMMENT ON TABLE OTHER_ASSIGNMENT IS 'Dashboard: non-project assignments'
/
CREATE TABLE PAGE ( 
	PAGEID  	NUMBER NOT NULL,
	PAGENAME	VARCHAR2(100) NULL,
	ORDR    	NUMBER(10,0) NOT NULL,
	TYPE    	NUMBER(1,0) NULL 
	)
/
COMMENT ON TABLE PAGE IS 'List of Insight sections, used for security'
/
CREATE TABLE PARAMETERS ( 
	PARAMETER_ID	VARCHAR2(50) NOT NULL,
	VALUE       	VARCHAR2(70) NULL 
	)
/
COMMENT ON TABLE PARAMETERS IS 'General application parameters of Insight. The parameter "Mail root" is used by Call logs'
/
CREATE TABLE PCB ( 
	PCB_ID           	NUMBER NOT NULL,
	WORKUNIT         	NUMBER NOT NULL,
	FROMDATE         	DATE NOT NULL,
	TODATE           	DATE NOT NULL,
	REPORT_DATE      	DATE NOT NULL,
	DEVELOPER_ID     	NUMBER NOT NULL,
	REPORTNAME       	VARCHAR2(90) NULL,
	REPORTTYPE       	NUMBER(1,0) NULL,
	METHODOLOGY      	CLOB NULL,
	GENERALCOMM      	CLOB NULL,
	LASTPROBLEMREVIEW	CLOB NULL,
	LASTSUGGREVIEW   	CLOB NULL,
	PROBLEMS         	CLOB NULL,
	SUGGESTIONS      	CLOB NULL,
	PERIOD           	VARCHAR2(2) NOT NULL,
	YEAR             	NUMBER NOT NULL 
	)
/
COMMENT ON TABLE PCB IS 'PCB reports of Insight'
/
COMMENT ON COLUMN PCB.REPORTTYPE IS 'from 0 to 5 maps to lifecycle ID, 6 is all,7 is custom'
/
CREATE TABLE PCBMETRIC ( 
	PCB_ID    	NUMBER NOT NULL,
	METRIC_ID 	NUMBER NOT NULL,
	ANALYSIS  	VARCHAR2(600) NULL,
	SUGGESTION	VARCHAR2(1200) NULL 
	)
/
COMMENT ON TABLE PCBMETRIC IS 'Summary comments of metrics of PCB (Insight)'
/
CREATE TABLE PCBMETRICPROJECT ( 
	PCB_ID    	NUMBER NOT NULL,
	PROJECT_ID	NUMBER NOT NULL,
	METRIC_ID 	NUMBER NOT NULL,
	ANALYSIS  	VARCHAR2(600) NULL 
	)
/
COMMENT ON TABLE PCBMETRICPROJECT IS 'Detail metric comment by project of PCB (Insight)'
/
CREATE TABLE PCBMGROUP ( 
	PCB_ID   	NUMBER NOT NULL,
	MGROUP_ID	NUMBER NOT NULL 
	)
/
COMMENT ON TABLE PCBMGROUP IS 'Selected metrics for the PCB  (Insight)'
/
COMMENT ON COLUMN PCBMGROUP.MGROUP_ID IS 'links to metricgroup'
/
CREATE TABLE PCBPROJECT ( 
	PCB_ID    	NUMBER NOT NULL,
	PROJECT_ID	NUMBER NOT NULL 
	)
/
COMMENT ON TABLE PCBPROJECT IS 'Selected projects for custom PCBs  (Insight)'
/
CREATE TABLE PLANNING ( 
	YEAR       	NUMBER NOT NULL,
	LASTUPDATE 	DATE NULL,
	PLANNING_ID	NUMBER NOT NULL,
	VERSION    	NUMBER NULL,
	WORKUNIT_ID	NUMBER NOT NULL 
	)
/
COMMENT ON TABLE PLANNING IS 'Plans  (Insight)'
/
CREATE TABLE PLANS_PROCESS_STAGE ( 
	STAGEID    	NUMBER NOT NULL,
	PROCESSID  	NUMBER NOT NULL,
	MILESTONEID	NUMBER NOT NULL,
	PLAN_RCR   	NUMBER NULL,
	PLAN_EFFORT	NUMBER NULL 
	)
/
COMMENT ON COLUMN PLANS_PROCESS_STAGE.STAGEID IS 'stage planned for'
/
COMMENT ON COLUMN PLANS_PROCESS_STAGE.MILESTONEID IS 'when is was planned'
/
CREATE TABLE PLANS_QC_STAGE ( 
	QCID              	NUMBER NOT NULL,
	MILESTONEID       	NUMBER NOT NULL,
	PLAN              	NUMBER NULL,
	REPLAN            	NUMBER NULL,
	REPLAN_DEFECT_RATE	NUMBER NULL 
	)
/
COMMENT ON TABLE PLANS_QC_STAGE IS 'Store Planned Defect Removal Efficiency by stage'
/
COMMENT ON COLUMN PLANS_QC_STAGE.QCID IS 'QC Activity, 1-RReview,2-DReview,3-CReview,4-UTest,5-ITest,6-STest,7-Other'
/
COMMENT ON COLUMN PLANS_QC_STAGE.MILESTONEID IS 'Milestone, project stage'
/
CREATE TABLE PLANS ( 
	METRIC_ID  	NUMBER NOT NULL,
	PLANNING_ID	NUMBER NOT NULL,
	JAN        	NUMBER NULL,
	FEB        	NUMBER NULL,
	MAR        	NUMBER NULL,
	APR        	NUMBER NULL,
	MAY        	NUMBER NULL,
	JUN        	NUMBER NULL,
	JUL        	NUMBER NULL,
	AUG        	NUMBER NULL,
	SEP        	NUMBER NULL,
	OCT        	NUMBER NULL,
	NOV        	NUMBER NULL,
	DEC        	NUMBER NULL,
	ASSUMPTION 	VARCHAR2(600) NULL,
	GROUP_ID   	NUMBER NULL,
	YEARTOTAL  	NUMBER NULL 
	)
/
COMMENT ON TABLE PLANS IS 'sub-entity of PLANNING table  (Insight)'
/
CREATE TABLE POST_MORTEM_REPORT ( 
	PROJECT_ID	NUMBER NOT NULL,
	APPROVERS 	VARCHAR2(600) NULL,
	REVIEWERS 	VARCHAR2(600) NULL 
	)
/
COMMENT ON TABLE POST_MORTEM_REPORT IS 'Text fields of PM report  (Insight)'
/
CREATE TABLE PRACTICES ( 
	PRACTICE_ID	NUMBER NOT NULL,
	SCENARIO   	VARCHAR2(1500) NULL,
	PRACTICE   	VARCHAR2(1500) NULL,
	TYPE       	NUMBER NULL,
	CATEGORY   	VARCHAR2(150) NULL,
	PROJECT_ID 	NUMBER NOT NULL 
	)
/
COMMENT ON TABLE PRACTICES IS 'Practices and lessons  (Insight)'
/
COMMENT ON COLUMN PRACTICES.TYPE IS 'practice/lesson'
/
CREATE TABLE PROCESS_EFFORT ( 
	PROCESS_EFFORT_ID	NUMBER NOT NULL,
	PROCESS_ID       	NUMBER NULL,
	PLAN_EFFORT      	NUMBER NULL,
	RE_PLAN_EFFORT   	NUMBER NULL,
	PROJECT_ID       	NUMBER NOT NULL,
	PLAN_RCR         	NUMBER NULL 
	)
/
COMMENT ON TABLE PROCESS_EFFORT IS 'Planned effort by process for projects (Insight)'
/
CREATE TABLE PROCESS_WP_MAPPING ( 
	PROC_WP_ID  	NUMBER NOT NULL,
	PROCESS_ID  	NUMBER NOT NULL,
	WP_ID       	NUMBER NOT NULL,
	MAPPING_TYPE	NUMBER NULL 
	)
/
COMMENT ON TABLE PROCESS_WP_MAPPING IS 'Process-Work product mapping, used in Timesheet'
/
COMMENT ON COLUMN PROCESS_WP_MAPPING.MAPPING_TYPE IS 'Difference tools use different types'
/
CREATE TABLE PROCESS ( 
	NAME      	VARCHAR2(500) NOT NULL,
	PROCESS_ID	NUMBER NULL,
	CODE      	VARCHAR2(100) NOT NULL,
	DISABLED  	NUMBER(2,0) NULL,
	APP_NAME  	VARCHAR2(255) NULL 
	)
/
COMMENT ON TABLE PROCESS IS 'Processes used in Timesheet, Insight and DMS'
/
CREATE TABLE PRODUCT_INTEGRATION_STRATEGY ( 
	INTEGR_ID             	NUMBER NOT NULL,
	INTEGR_PRJ_ID         	NUMBER NOT NULL,
	INTEGR_COMP_ID        	VARCHAR2(600) NOT NULL,
	INTEGR_DESCRIPTION    	VARCHAR2(600) NULL,
	INTEGR_WITH_COMPONENTS	VARCHAR2(600) NULL,
	INTEGR_ORDER          	VARCHAR2(600) NULL,
	INTEGR_READY_NEED     	VARCHAR2(600) NULL 
	)
/
CREATE TABLE PRODUCT_LOC_ACTUAL ( 
	PRODUCT_LOC_ID  	NUMBER NOT NULL,
	PROJECT_ID      	NUMBER NOT NULL,
	MODULE_ID       	NUMBER NOT NULL,
	LANGUAGE_ID     	NUMBER NOT NULL,
	LOC_PRODUCTIVITY	NUMBER NULL,
	LOC_QUALITY     	NUMBER NULL,
	MOTHER_BODY     	NUMBER NULL,
	ADDED           	NUMBER NULL,
	MODIFIED        	NUMBER NULL,
	TOTAL           	NUMBER NULL,
	REUSED          	NUMBER NULL,
	GENERATED       	NUMBER NULL,
	NOTE            	VARCHAR2(600) NULL 
	)
/
COMMENT ON TABLE PRODUCT_LOC_ACTUAL IS 'FI: Store actual product LOC of project'
/
CREATE TABLE PRODUCT_LOC_PLAN ( 
	PRODUCT_LOC_ID  	NUMBER NOT NULL,
	PROJECT_ID      	NUMBER NOT NULL,
	MODULE_ID       	NUMBER NOT NULL,
	LANGUAGE_ID     	NUMBER NOT NULL,
	LOC_PRODUCTIVITY	NUMBER NULL,
	LOC_QUALITY     	NUMBER NULL,
	MOTHER_BODY     	NUMBER NULL,
	ADDED           	NUMBER NULL,
	MODIFIED        	NUMBER NULL,
	TOTAL           	NUMBER NULL,
	REUSED          	NUMBER NULL,
	GENERATED       	NUMBER NULL,
	NOTE            	VARCHAR2(600) NULL 
	)
/
COMMENT ON TABLE PRODUCT_LOC_PLAN IS 'FI: Store planned product LOC of project'
/
CREATE TABLE PROJECT_ARCHIVE_HISTORY ( 
	PROJECT_ARCHIVE_HISTORY_ID	NUMBER NOT NULL,
	PROJECT_ID                	NUMBER NOT NULL,
	PROJECT_ARCHIVE_STATUS    	VARCHAR2(10) NULL,
	DEVELOPER_ID              	NUMBER NOT NULL,
	EFFECT_DATE               	DATE NOT NULL,
	DESCRIPTION               	VARCHAR2(100) NULL 
	)
/
CREATE TABLE PROJECT_ARCHIVE ( 
	PROJECT_ID                	NUMBER NOT NULL,
	ACTUAL_MAX_TEAM_SIZE      	NUMBER NULL,
	ACTUAL_EFFORT_USAGE       	NUMBER NULL,
	BILLABLE_ACTUAL_EFFORT    	NUMBER NULL,
	ACTUAL_MANAGEMENT         	NUMBER NULL,
	ACTUAL_MAN_EFFORT         	NUMBER NULL,
	ACTUAL_DEV_EFFORT         	NUMBER NULL,
	CORRECTION_COST           	NUMBER NULL,
	TRANS_COST                	NUMBER NULL,
	ACTUAL_EFFORT             	NUMBER NULL,
	TOTAL_REQ_COMMITTED_SIZE  	NUMBER NULL,
	TOTAL_REQ_DESIGNED_SIZE   	NUMBER NULL,
	TOTAL_REQ_CODED           	NUMBER NULL,
	REQUIREMENT_STABILITY     	NUMBER NULL,
	TOTAL_REQ_TESTED_SIZE     	NUMBER NULL,
	TOTAL_REQUIREMENT_SIZE    	NUMBER NULL,
	TOTAL_REQ_DEPLOYED_SIZE   	NUMBER NULL,
	AVERAGE_REQ_RESPONSE_TIME 	NUMBER NULL,
	TOTAL_ACCEPTED_SIZE       	NUMBER NULL,
	REQUIREMENT_GRAPHICS_VALUE	VARCHAR2(2000) NULL,
	REQUIREMENT_GRAPHICS_NAME 	VARCHAR2(2000) NULL 
	)
/
CREATE TABLE PROJECT_COST ( 
	PROJECT_COST_ID	NUMBER NOT NULL,
	PROJECT_PLAN_ID	NUMBER NULL,
	ACTIVITIES     	VARCHAR2(600) NULL,
	TYPE           	NUMBER(10,0) NULL,
	EFFORT         	NUMBER NULL,
	COST           	NUMBER NULL 
	)
/
COMMENT ON TABLE PROJECT_COST IS 'Project costs (Insight)'
/
COMMENT ON COLUMN PROJECT_COST.PROJECT_PLAN_ID IS 'links to project not project_plan'
/
CREATE TABLE PROJECT_DATABASE ( 
	PROJECT_ID	NUMBER NOT NULL,
	EXCEL_FILE	LONG RAW NULL 
	)
/
COMMENT ON TABLE PROJECT_DATABASE IS 'Dashboard: store project database, no longly used'
/
CREATE TABLE PROJECT_DEVIATION ( 
	DEVIATION_ID	NUMBER NOT NULL,
	PROJECT_ID  	NUMBER NOT NULL,
	MODIFICATION	VARCHAR2(600) NULL,
	ACTION      	NUMBER NULL,
	REASON      	VARCHAR2(600) NULL,
	CATEGORY    	VARCHAR2(150) NULL,
	NOTE        	VARCHAR2(600) NULL 
	)
/
COMMENT ON TABLE PROJECT_DEVIATION IS '(Insight)'
/
CREATE TABLE PROJECT_HIS ( 
	PROJECT_HIS_ID	NUMBER NULL,
	PROJECT_ID    	NUMBER NULL,
	EVENT_DATE    	DATE NULL,
	EVENT         	VARCHAR2(1500) NULL,
	COMMENTS      	VARCHAR2(1500) NULL 
	)
/
COMMENT ON TABLE PROJECT_HIS IS 'Project history (Insight)'
/
CREATE TABLE PROJECT_PLAN ( 
	PROJECT_PLAN_ID           	NUMBER NOT NULL,
	PROJECT_ID                	NUMBER NULL,
	LAST_UPDATE               	DATE NULL,
	MANAGEMENT_EFFORT         	NUMBER NULL,
	QUALITY_EFFORT            	NUMBER NULL,
	SCHEDULE                  	VARCHAR2(600) NULL,
	STRUCTURE                 	CLOB NULL,
	PROJECT_COMMUNICATION     	CLOB NULL,
	MANAGEMENT_COMMUNICATION  	CLOB NULL,
	CUSTOMER_COMMUNICATION    	CLOB NULL,
	OTHER_COMMUNICATION       	CLOB NULL,
	QUALITY_OBJECTIVE_STRATEGY	CLOB NULL,
	CONFIGURATION_MANAGEMENT  	VARCHAR2(600) NULL,
	MAX_TEAM_SIZE             	NUMBER NULL,
	TIMELINESS                	NUMBER NULL,
	CUSTOMER_LOCATION         	VARCHAR2(150) NULL,
	DOMAIN                    	VARCHAR2(150) NULL,
	DIRECTOR                  	VARCHAR2(60) NULL,
	SCOPE_OBJECTIVE           	CLOB NULL,
	ASSET                     	CLOB NULL,
	PROBLEM                   	CLOB NULL,
	REWARD_PENALTY            	CLOB NULL,
	ORG_STRUCTURE             	CLOB NULL,
	REQPLANREVIEWDEFECT       	NUMBER NULL,
	REQREPLANREVIEWDEFECT     	NUMBER NULL,
	DESPLANREVIEWDEFECT       	NUMBER NULL,
	DESREPLANREVIEWDEFECT     	NUMBER NULL,
	CODPLANREVIEWDEFECT       	NUMBER NULL,
	CODREPLANREVIEWDEFECT     	NUMBER NULL,
	OTHPLANREVIEWDEFECT       	NUMBER NULL,
	OTHREPLANREVIEWDEFECT     	NUMBER NULL,
	REQPLANTESTDEFECT         	NUMBER NULL,
	REQREPLANTESTDEFECT       	NUMBER NULL,
	DESPLANTESTDEFECT         	NUMBER NULL,
	DESREPLANTESTDEFECT       	NUMBER NULL,
	CODPLANTESTDEFECT         	NUMBER NULL,
	CODREPLANTESTDEFECT       	NUMBER NULL,
	OTHPLANTESTDEFECT         	NUMBER NULL,
	OTHREPLANTESTDEFECT       	NUMBER NULL,
	APPLICATION_TYPE          	NUMBER NULL,
	SCHEDULEFILE              	BLOB NULL,
	SCHEDULEFILENAME          	VARCHAR2(80) NULL,
	PLAN_CALENDAR_EFFORT      	NUMBER NULL,
	REPLAN_CALENDAR_EFFORT    	NUMBER NULL,
	CONTRACT_TYPE             	NUMBER(2,0) NULL,
	REQNOTEREVIEWDEFECT       	VARCHAR2(600) NULL,
	DESNOTEREVIEWDEFECT       	VARCHAR2(600) NULL,
	CODNOTEREVIEWDEFECT       	VARCHAR2(600) NULL,
	REQNOTETESTDEFECT         	VARCHAR2(600) NULL,
	DESNOTETESTDEFECT         	VARCHAR2(600) NULL,
	CODNOTETESTDEFECT         	VARCHAR2(600) NULL,
	PROPOSAL                  	CLOB NULL 
	)
/
COMMENT ON TABLE PROJECT_PLAN IS 'Project plan information and defect planning  (Insight)'
/
CREATE TABLE PROJECT_SCHEDULE ( 
	SCHED_ID         	NUMBER NOT NULL,
	SCHED_PRJ_ID     	NUMBER NOT NULL,
	SCHED_ACTIVITY   	VARCHAR2(600) NOT NULL,
	SCHED_STARTDATE  	DATE NOT NULL,
	SCHED_RESPONSIBLE	VARCHAR2(600) NULL,
	SCHED_NOTE       	VARCHAR2(600) NULL,
	SCHED_TYPE       	NUMBER NOT NULL 
	)
/
CREATE TABLE PROJECT_TAILORING ( 
	PROJECT_ID     	NUMBER NOT NULL,
	PROCESS_TAIL_ID	NUMBER NOT NULL,
	ACTION         	NUMBER NOT NULL,
	NOTE           	VARCHAR2(600) NULL 
	)
/
COMMENT ON TABLE PROJECT_TAILORING IS 'Project tailorings  (Insight)'
/
COMMENT ON COLUMN PROJECT_TAILORING.PROCESS_TAIL_ID IS 'lonks to tailoring'
/
CREATE GLOBAL TEMPORARY TABLE PROJECT_TEMP ( 
	PROJECT_ID	NUMBER NOT NULL 
	)
ON COMMIT DELETE ROWS
/
COMMENT ON TABLE PROJECT_TEMP IS 'Temporary table to be used to store temporary project_id that used in Queries of Timesheet reports'
/
CREATE TABLE PROJECT ( 
	PROJECT_ID            	NUMBER NOT NULL,
	TYPE                  	VARCHAR2(2) NOT NULL,
	CODE                  	VARCHAR2(60) NOT NULL,
	NAME                  	VARCHAR2(150) NOT NULL,
	GROUP_NAME            	VARCHAR2(30) NULL,
	START_DATE            	DATE NULL,
	PER_COMPLETE          	NUMBER NULL,
	LEADER                	VARCHAR2(20) NULL,
	BASE_FINISH_DATE      	DATE NULL,
	PLAN_FINISH_DATE      	DATE NULL,
	ACTUAL_FINISH_DATE    	DATE NULL,
	BASE_EFFORT           	NUMBER NULL,
	PLAN_EFFORT           	NUMBER NULL,
	ACTUAL_EFFORT         	NUMBER NULL,
	DESCRIPTION           	VARCHAR2(600) NULL,
	TOTALBUG              	NUMBER NULL,
	TOTALWEIGHTEDBUG      	NUMBER NULL,
	TOTALREQUIREMENT      	NUMBER NULL,
	COMMITTEDREQUIREMENT  	NUMBER NULL,
	DESIGNEDREQUIREMENT   	NUMBER NULL,
	CODEDREQUIREMENT      	NUMBER NULL,
	TESTEDREQUIREMENT     	NUMBER NULL,
	DEPLOYEDREQUIREMENT   	NUMBER NULL,
	ACCEPTEDREQUIREMENT   	NUMBER NULL,
	TOTALDEFECT           	NUMBER NULL,
	TOTALWEIGHTEDDEFECT   	NUMBER NULL,
	FATALPENDINGDEFECT    	NUMBER NULL,
	SERIOUSPENDINGDEFECT  	NUMBER NULL,
	MEDIUMPENDINGDEFECT   	NUMBER NULL,
	COSMETICPENDINGDEFECT 	NUMBER NULL,
	TOTALFATALDEFECT      	NUMBER NULL,
	TOTALSERIOUSDEFECT    	NUMBER NULL,
	TOTALMEDIUMDEFECT     	NUMBER NULL,
	TOTALCOSMETICDEFECT   	NUMBER NULL,
	STATUS                	VARCHAR2(1) NULL,
	SCHEDULE_STATUS       	NUMBER NULL,
	EFFORT_STATUS         	NUMBER NULL,
	LAST_UPDATE           	DATE NULL,
	CATEGORY              	VARCHAR2(1) NULL,
	CUSTOMER              	VARCHAR2(150) NULL,
	PLAN_START_DATE       	DATE NULL,
	APPLY_PPM             	NUMBER(1,0) NULL,
	REASON                	VARCHAR2(600) NULL,
	BASE_BILLABLE_EFFORT  	NUMBER NULL,
	PLAN_BILLABLE_EFFORT  	NUMBER NULL,
	ACTUAL_BILLABLE_EFFORT	NUMBER NULL,
	RANK                  	VARCHAR2(2) NULL,
	CUSTOMER_2ND          	VARCHAR2(150) NULL,
	PROJECT_LEVEL         	VARCHAR2(90) NULL,
	DIVISION_NAME         	VARCHAR2(150) NULL,
	ARCHIVE_STATUS        	NUMBER NULL,
	PARENT_ID             	NUMBER(22,0) NULL,
	UNIT_ID               	NUMBER(22,0) NULL,
	PROJECT_STATUS_CODE   	VARCHAR2(100) NULL,
	PROJECT_CATEGORY_CODE 	VARCHAR2(100) NULL,
	PROJECT_TYPE_CODE     	VARCHAR2(100) NULL,
	TYPE_CUSTOMER         	NUMBER NULL,
	TYPE_CUSTOMER_2ND     	NUMBER NULL 
	)
/
COMMENT ON TABLE PROJECT IS 'Main project information, effect to all FMS tools'
/
COMMENT ON COLUMN PROJECT.START_DATE IS 'Planned'
/
COMMENT ON COLUMN PROJECT.LEADER IS 'Leader account'
/
COMMENT ON COLUMN PROJECT.BASE_FINISH_DATE IS 'Planned'
/
COMMENT ON COLUMN PROJECT.PLAN_FINISH_DATE IS 'Replanned'
/
COMMENT ON COLUMN PROJECT.BASE_EFFORT IS 'Planned'
/
COMMENT ON COLUMN PROJECT.PLAN_EFFORT IS 'Replanned'
/
COMMENT ON COLUMN PROJECT.TOTALBUG IS 'Temporary column for submitting Weelky report from Insight to Dashboard'
/
COMMENT ON COLUMN PROJECT.TOTALWEIGHTEDBUG IS 'Temporary column for submitting Weelky report from Insight to Dashboard'
/
COMMENT ON COLUMN PROJECT.TOTALREQUIREMENT IS 'Temporary column for submitting Weelky report from Insight to Dashboard'
/
COMMENT ON COLUMN PROJECT.COMMITTEDREQUIREMENT IS 'Temporary column for submitting Weelky report from Insight to Dashboard'
/
COMMENT ON COLUMN PROJECT.DESIGNEDREQUIREMENT IS 'Temporary column for submitting Weelky report from Insight to Dashboard'
/
COMMENT ON COLUMN PROJECT.CODEDREQUIREMENT IS 'Temporary column for submitting Weelky report from Insight to Dashboard'
/
COMMENT ON COLUMN PROJECT.TESTEDREQUIREMENT IS 'Temporary column for submitting Weelky report from Insight to Dashboard'
/
COMMENT ON COLUMN PROJECT.DEPLOYEDREQUIREMENT IS 'Temporary column for submitting Weelky report from Insight to Dashboard'
/
COMMENT ON COLUMN PROJECT.ACCEPTEDREQUIREMENT IS 'Temporary column for submitting Weelky report from Insight to Dashboard'
/
COMMENT ON COLUMN PROJECT.TOTALDEFECT IS 'Temporary column for submitting Weelky report from Insight to Dashboard'
/
COMMENT ON COLUMN PROJECT.TOTALWEIGHTEDDEFECT IS 'Temporary column for submitting Weelky report from Insight to Dashboard'
/
COMMENT ON COLUMN PROJECT.FATALPENDINGDEFECT IS 'Temporary column for submitting Weelky report from Insight to Dashboard'
/
COMMENT ON COLUMN PROJECT.SERIOUSPENDINGDEFECT IS 'Temporary column for submitting Weelky report from Insight to Dashboard'
/
COMMENT ON COLUMN PROJECT.MEDIUMPENDINGDEFECT IS 'Temporary column for submitting Weelky report from Insight to Dashboard'
/
COMMENT ON COLUMN PROJECT.COSMETICPENDINGDEFECT IS 'Temporary column for submitting Weelky report from Insight to Dashboard'
/
COMMENT ON COLUMN PROJECT.TOTALFATALDEFECT IS 'Temporary column for submitting Weelky report from Insight to Dashboard'
/
COMMENT ON COLUMN PROJECT.TOTALSERIOUSDEFECT IS 'Temporary column for submitting Weelky report from Insight to Dashboard'
/
COMMENT ON COLUMN PROJECT.TOTALMEDIUMDEFECT IS 'Temporary column for submitting Weelky report from Insight to Dashboard'
/
COMMENT ON COLUMN PROJECT.TOTALCOSMETICDEFECT IS 'Temporary column for submitting Weelky report from Insight to Dashboard'
/
COMMENT ON COLUMN PROJECT.SCHEDULE_STATUS IS 'Temporary column for submitting Weelky report from Insight to Dashboard'
/
COMMENT ON COLUMN PROJECT.EFFORT_STATUS IS 'Temporary column for submitting Weelky report from Insight to Dashboard'
/
COMMENT ON COLUMN PROJECT.PLAN_START_DATE IS 'Replanned'
/
CREATE TABLE PROJECTSKILL ( 
	PROJECTSKILLID	NUMBER NOT NULL,
	ASSIGNMENT_ID 	NUMBER NOT NULL,
	PROCESS_ID    	NUMBER NULL,
	SKILL         	VARCHAR2(300) NULL,
	POINT         	NUMBER NULL,
	SKILLCOMMENT  	VARCHAR2(1500) NULL 
	)
/
COMMENT ON TABLE PROJECTSKILL IS 'project team skills  (Insight)'
/
CREATE TABLE PSTUBTBL ( 
	USERNAME	VARCHAR2(30) NULL,
	DBNAME  	VARCHAR2(128) NULL,
	LUN     	VARCHAR2(30) NULL,
	LUTYPE  	VARCHAR2(3) NULL,
	LINENO  	NUMBER NULL,
	LINE    	VARCHAR2(1800) NULL 
	)
/
CREATE TABLE QC_ACTIVITY ( 
	NAME        	VARCHAR2(90) NOT NULL,
	QA_ID       	NUMBER NULL,
	CODE        	VARCHAR2(100) NOT NULL,
	ORDER_NUMBER	NUMBER(3,0) NULL,
	DISABLED    	NUMBER(2,0) NULL,
	APP_NAME    	VARCHAR2(255) NULL 
	)
/
COMMENT ON TABLE QC_ACTIVITY IS '(DMS)'
/
CREATE TABLE QCACTIVITY_ACTIVITYTYPE ( 
	TYPE_CODE	VARCHAR2(100) NOT NULL,
	QC_CODE  	VARCHAR2(100) NOT NULL 
	)
/
CREATE TABLE QCACTIVITY_PROCESS ( 
	QC_CODE     	VARCHAR2(100) NOT NULL,
	PROCESS_CODE	VARCHAR2(100) NOT NULL 
	)
/
CREATE TABLE QCACTIVITY_WORKPRODUCT ( 
	WP_CODE	VARCHAR2(100) NOT NULL,
	QC_CODE	VARCHAR2(100) NOT NULL 
	)
/
CREATE TABLE QO_STRATEGY_FOR_MEETING ( 
	QO_STRAT_ID               	NUMBER NOT NULL,
	QO_STRAT_PRJ_ID           	NUMBER NOT NULL,
	QO_STRAT_DESC             	VARCHAR2(600) NOT NULL,
	QO_STRAT_EXPECTED_BENEFITS	VARCHAR2(600) NOT NULL 
	)
/
CREATE TABLE QUALITY_ACTIVITY_EFFORT ( 
	PROJECT_ID                	NUMBER NULL,
	PLAN_EFFORT               	NUMBER NULL,
	RE_PLAN_EFFORT            	NUMBER NULL,
	ACTUAL_EFFORT             	NUMBER NULL,
	QUALITY_ACTIVITY_EFFORT_ID	NUMBER NOT NULL,
	ACTIVITY_ID               	NUMBER NULL,
	TYPE                      	NUMBER NULL 
	)
/
COMMENT ON TABLE QUALITY_ACTIVITY_EFFORT IS 'Planned and actual effort for quality activities  (Insight) 
TODO: merge with Other_activity table'
/
COMMENT ON COLUMN QUALITY_ACTIVITY_EFFORT.ACTIVITY_ID IS 'links to Other_activity'
/
CREATE TABLE REFERENCE_DATA ( 
	REFERENCE_ID	NUMBER(22,0) NOT NULL,
	GROUP_CODE  	VARCHAR2(100) NULL,
	ITEM_CODE   	VARCHAR2(100) NULL,
	LANG_CODE   	VARCHAR2(30) NULL,
	DESCRIPTION 	VARCHAR2(500) NULL,
	DISABLED    	NUMBER(2,0) NULL 
	)
/
CREATE TABLE REFERENCES ( 
	REFERENCE_ID   	NUMBER NOT NULL,
	PROJECT_PLAN_ID	NUMBER NULL,
	ISSUED_DATE    	DATE NULL,
	SOURCE         	VARCHAR2(150) NULL,
	NOTE           	VARCHAR2(150) NULL,
	DOCUMENT       	VARCHAR2(150) NULL 
	)
/
COMMENT ON TABLE REFERENCES IS 'Project plan references (Insight)'
/
CREATE TABLE REPORTCOMMENTS ( 
	REPORTCOMMENTS_ID	NUMBER NOT NULL,
	REPORT_TYPE      	VARCHAR2(2) NOT NULL,
	REPORT_DATE      	DATE NOT NULL,
	COMMENTS         	CLOB NULL,
	PROJECT_ID       	NUMBER NOT NULL 
	)
/
COMMENT ON TABLE REPORTCOMMENTS IS 'Weekly and milestone report comments (Insight)'
/
COMMENT ON COLUMN REPORTCOMMENTS.REPORT_TYPE IS 'can be ''WR'' for weekly report or ''MR'' for milestone report'
/
COMMENT ON COLUMN REPORTCOMMENTS.REPORT_DATE IS 'date of the report'
/
CREATE TABLE REQ_CHANGES_MNG ( 
	REQ_CHANGES_ID  	NUMBER NOT NULL,
	REQ_PROJECT_ID  	NUMBER NOT NULL,
	REQ_CHANGES_DESC	VARCHAR2(600) NULL,
	REQ_CREATOR     	VARCHAR2(600) NOT NULL,
	REQ_REVIEWER    	VARCHAR2(600) NOT NULL,
	REQ_APROVER     	VARCHAR2(600) NOT NULL,
	REQ_LOG_LOCATION	VARCHAR2(600) NOT NULL 
	)
/
CREATE TABLE REQUIREMENTS ( 
	REQUIREMENT_ID 	NUMBER NOT NULL,
	PREV_PROJECT_ID	NUMBER NULL,
	MODULE_ID      	NUMBER NULL,
	TYPE           	NUMBER NULL,
	REQ_SIZE       	NUMBER NULL,
	SRS            	VARCHAR2(600) NULL,
	DD             	VARCHAR2(600) NULL,
	TESTCASE       	VARCHAR2(150) NULL,
	RELEASE_NOTE   	VARCHAR2(600) NULL,
	EFFORT         	NUMBER NULL,
	ELAPSED_DAY    	NUMBER NULL,
	RECEIVED_DATE  	DATE NULL,
	RESPONSE_DATE  	DATE NULL,
	PROJECT_ID     	NUMBER NOT NULL,
	CREATE_DATE    	DATE NULL,
	COMMITTED_DATE 	DATE NULL,
	DESIGNED_DATE  	DATE NULL,
	CODED_DATE     	DATE NULL,
	TESTED_DATE    	DATE NULL,
	DEPLOYED_DATE  	DATE NULL,
	ACCEPTED_DATE  	DATE NULL,
	CANCELLED_DATE 	DATE NULL,
	REQUIREMENT    	VARCHAR2(600) NULL,
	CODE_MODULE    	VARCHAR2(50) NULL 
	)
/
COMMENT ON TABLE REQUIREMENTS IS 'Project requirements (Insight)'
/
CREATE TABLE RESPONSIBILITY ( 
	NAME                 	VARCHAR2(500) NOT NULL,
	ORDER_NUMBER         	NUMBER(2,0) NULL,
	RIGHTGROUP           	CHAR(50) NULL,
	PRIORITY             	NUMBER(2,0) NULL,
	RESPONSIBILITY_ID    	NUMBER NULL,
	PROJECT_POSITION_CODE	VARCHAR2(100) NOT NULL,
	DISABLED             	NUMBER(2,0) NULL,
	ISDROP               	NUMBER NULL 
	)
/
COMMENT ON TABLE RESPONSIBILITY IS 'List of responsibility used for project teams (Dashboard, Insight)'
/
COMMENT ON COLUMN RESPONSIBILITY.RIGHTGROUP IS 'List of roles used for member roles of project teams (Insight)'
/
CREATE TABLE REVIEW_EFFORT ( 
	REVIEW_EFFORT_ID	NUMBER NOT NULL,
	PLAN_EFFORT     	NUMBER NULL,
	RE_PLAN_EFFORT  	NUMBER NULL,
	MODULE_ID       	NUMBER NOT NULL,
	PROJECT_ID      	NUMBER NOT NULL,
	ACTUAL_EFFORT   	NUMBER NULL 
	)
/
COMMENT ON TABLE REVIEW_EFFORT IS 'Planned and actual effort for review activities(Insight)'
/
CREATE TABLE REVIEW_STRATEGY ( 
	REV_ID      	NUMBER NOT NULL,
	REV_PRJ_ID  	NUMBER NOT NULL,
	REV_TYPE    	VARCHAR2(600) NULL,
	REV_ITEM    	VARCHAR2(600) NULL,
	REV_REVIEWER	VARCHAR2(600) NULL,
	REV_WHEN    	VARCHAR2(600) NULL 
	)
/
CREATE TABLE RIGHTFORPAGE ( 
	RIGHTGROUPID	CHAR(50) NOT NULL,
	PRIVILEGE   	NUMBER NOT NULL,
	PAGEID      	NUMBER NOT NULL 
	)
/
COMMENT ON TABLE RIGHTFORPAGE IS 'User Roles definitions (Insight)'
/
COMMENT ON COLUMN RIGHTFORPAGE.PAGEID IS 'links to page'
/
CREATE TABLE RIGHTGROUP ( 
	RIGHTGROUPID	CHAR(50) NOT NULL,
	MNGLEVEL    	VARCHAR2(255) NOT NULL,
	DESCRIPTION 	VARCHAR2(255) NULL,
	PROTECTED   	NUMBER(1,0) NULL 
	)
/
COMMENT ON TABLE RIGHTGROUP IS 'User Roles list(Insight)'
/
COMMENT ON COLUMN RIGHTGROUP.PROTECTED IS 'protected items can''t be deleted by users'
/
CREATE TABLE RIGHTGROUPOFUSERBYWORKUNIT ( 
	WORKUNITID  	NUMBER NOT NULL,
	RIGHTGROUPID	CHAR(50) NOT NULL,
	MANUAL      	VARCHAR2(10) NULL,
	DEVELOPERID 	NUMBER NOT NULL 
	)
/
COMMENT ON TABLE RIGHTGROUPOFUSERBYWORKUNIT IS 'roles given to users (Insight)'
/
COMMENT ON COLUMN RIGHTGROUPOFUSERBYWORKUNIT.MANUAL IS 'deprecated'
/
CREATE TABLE RISK_CATEGORY ( 
	CATEGORY_ID  	NUMBER NOT NULL,
	CATEGORY_NAME	VARCHAR2(50) NULL,
	IS_NEW       	NUMBER(2,0) NULL 
	)
/
CREATE TABLE RISK_CONTIGENCY ( 
	RISK_CONTIGENCY_ID	NUMBER NOT NULL,
	RISK_ID           	NUMBER NULL,
	CONTIGENCY        	VARCHAR2(600) NULL,
	DEVELOPER_ACC     	VARCHAR2(60) NULL,
	PLAN_END_DATE     	DATE NULL,
	ACTUAL_END_DATE   	DATE NULL,
	ACTION_STATUS     	NUMBER NULL 
	)
/
CREATE TABLE RISK_MITIGATION ( 
	RISK_MITIGATION_ID	NUMBER NOT NULL,
	RISK_ID           	NUMBER NULL,
	MITIGATION        	VARCHAR2(600) NULL,
	MITIGATION_COST   	NUMBER NULL,
	MITIGATION_BENEFIT	VARCHAR2(600) NULL,
	DEVELOPER_ACC     	VARCHAR2(60) NULL,
	PLAN_END_DATE     	DATE NULL,
	ACTUAL_END_DATE   	DATE NULL,
	ACTION_STATUS     	NUMBER NULL 
	)
/
CREATE TABLE RISK_SOURCE_MITIGATION ( 
	RISK_SOURCE_MITIGATION_ID	NUMBER NOT NULL,
	SOURCE_ID                	NUMBER NULL,
	MITIGATION_TEMP          	VARCHAR2(600) NULL 
	)
/
CREATE TABLE RISK_SOURCE ( 
	SOURCE_ID  	NUMBER NOT NULL,
	SOURCE_NAME	VARCHAR2(100) NULL,
	CATEGORY_ID	NUMBER NOT NULL,
	TOP_RISK   	NUMBER NULL,
	PROCESS_ID 	NUMBER NULL 
	)
/
CREATE TABLE RISK ( 
	RISK_ID              	NUMBER NOT NULL,
	CONDITION            	VARCHAR2(600) NULL,
	CONSEQUENCE          	VARCHAR2(600) NULL,
	PROB                 	NUMBER NULL,
	IMPACT_TO            	NUMBER NULL,
	UNIT                 	NUMBER NULL,
	ESTIMATED_IMPACT     	NUMBER NULL,
	MITIGATION           	VARCHAR2(600) NULL,
	CONTIGENCY_PLAN      	VARCHAR2(600) NULL,
	TRIGGER_NAME         	VARCHAR2(600) NULL,
	DEVELOPER_ID         	NUMBER NULL,
	ASSESSMENT_DATE      	DATE NULL,
	STATUS               	NUMBER NULL,
	ACTUAL_RISK_SCENARIOR	VARCHAR2(600) NULL,
	ACTUAL_ACTION        	VARCHAR2(600) NULL,
	ACTUAL_IMPACT        	VARCHAR2(300) NULL,
	PROJECT_ID           	NUMBER NULL,
	PLANNED_IMPACT       	VARCHAR2(300) NULL,
	UNPLANNED            	NUMBER NULL,
	EXPOSURE             	NUMBER NULL,
	DEVELOPER_ACC        	VARCHAR2(60) NULL,
	PROCESS_ID           	NUMBER(3,0) NULL,
	BASELINED            	NUMBER(1,0) NULL,
	SOURCE_ID            	NUMBER NULL,
	TYPE                 	NUMBER NULL,
	THRESHOLD            	VARCHAR2(600) NULL,
	MITIGATION_BENEFIT   	VARCHAR2(600) NULL,
	ACTUAL_MITIGATION    	VARCHAR2(600) NULL,
	EXPOSURE_NEW         	NUMBER NULL,
	PRIORITY             	NUMBER(1,0) NULL,
	LAST_UPDATED_DATE    	DATE NULL,
	RISK_PRIORITY        	NUMBER(2,0) NULL,
	IMPACT               	NUMBER(2,0) NULL 
	)
/
COMMENT ON TABLE RISK IS 'Project risks (Insight)'
/
COMMENT ON COLUMN RISK.BASELINED IS 'defined as a common risk'
/
CREATE TABLE SQLN_EXPLAIN_PLAN ( 
	STATEMENT_ID   	VARCHAR2(30) NULL,
	TIMESTAMP      	DATE NULL,
	REMARKS        	VARCHAR2(80) NULL,
	OPERATION      	VARCHAR2(30) NULL,
	OPTIONS        	VARCHAR2(30) NULL,
	OBJECT_NODE    	VARCHAR2(128) NULL,
	OBJECT_OWNER   	VARCHAR2(30) NULL,
	OBJECT_NAME    	VARCHAR2(30) NULL,
	OBJECT_INSTANCE	NUMBER NULL,
	OBJECT_TYPE    	VARCHAR2(30) NULL,
	OPTIMIZER      	VARCHAR2(255) NULL,
	SEARCH_COLUMNS 	NUMBER NULL,
	ID             	NUMBER NULL,
	PARENT_ID      	NUMBER NULL,
	POSITION       	NUMBER NULL,
	COST           	NUMBER NULL,
	CARDINALITY    	NUMBER NULL,
	BYTES          	NUMBER NULL,
	OTHER_TAG      	VARCHAR2(255) NULL,
	PARTITION_START	VARCHAR2(255) NULL,
	PARTITION_STOP 	VARCHAR2(255) NULL,
	PARTITION_ID   	NUMBER NULL,
	OTHER          	LONG NULL,
	DISTRIBUTION   	VARCHAR2(30) NULL 
	)
/
COMMENT ON TABLE SQLN_EXPLAIN_PLAN IS 'Oracle system table (delete?)'
/
CREATE TABLE STAFFS ( 
	CODE      	NUMBER(10,0) NOT NULL,
	FULL_NAME 	VARCHAR2(150) NULL,
	JOIN_DATE 	DATE NULL,
	LEAVE_DATE	DATE NULL,
	GROUP_ID  	VARCHAR2(30) NULL,
	TYPE      	LONG NULL 
	)
/
COMMENT ON TABLE STAFFS IS '?'
/
CREATE TABLE STAGE ( 
	STAGE_ID	NUMBER NOT NULL,
	NAME    	VARCHAR2(90) NOT NULL 
	)
/
COMMENT ON TABLE STAGE IS 'Standard stage list (Insight)'
/
CREATE TABLE STMT_AUDIT_OPTION_MAP ( 
	OPTION# 	NUMBER NOT NULL,
	NAME    	VARCHAR2(40) NOT NULL,
	PROPERTY	NUMBER NOT NULL 
	)
/
COMMENT ON TABLE STMT_AUDIT_OPTION_MAP IS 'Description table for auditing option type codes.  Maps auditing option type numbers to type names'
/
COMMENT ON COLUMN STMT_AUDIT_OPTION_MAP.OPTION# IS 'Numeric auditing option type code'
/
COMMENT ON COLUMN STMT_AUDIT_OPTION_MAP.NAME IS 'Name of the type of auditing option'
/
COMMENT ON COLUMN STMT_AUDIT_OPTION_MAP.PROPERTY IS 'Property flag of auditing option'
/
CREATE TABLE SUBCONTRACT ( 
	SUBCONTRACT_ID      	NUMBER NOT NULL,
	PROJECT_PLAN_ID     	NUMBER NULL,
	DELIVERABLE         	VARCHAR2(600) NULL,
	PLAN_DELIVERY_DATE  	DATE NULL,
	ACTUAL_DELIVERY_DATE	DATE NULL,
	JOB                 	VARCHAR2(600) NULL,
	NOTE                	VARCHAR2(600) NULL,
	SNAME               	VARCHAR2(600) NULL,
	CONTACT_PERSON      	VARCHAR2(600) NULL,
	REF_TO_CONTRACT     	VARCHAR2(600) NULL 
	)
/
COMMENT ON TABLE SUBCONTRACT IS 'project subcontracts (Insight)'
/
CREATE TABLE SUPPORT ( 
	METRIC_ID  	VARCHAR2(5) NULL,
	VALUE      	NUMBER(10,5) NULL,
	GROUP_ID   	VARCHAR2(30) NULL,
	REPORT_DATE	DATE NULL 
	)
/
COMMENT ON TABLE SUPPORT IS '?'
/
CREATE TABLE SYSTEM_PRIVILEGE_MAP ( 
	PRIVILEGE	NUMBER NOT NULL,
	NAME     	VARCHAR2(40) NOT NULL,
	PROPERTY 	NUMBER NOT NULL 
	)
/
COMMENT ON TABLE SYSTEM_PRIVILEGE_MAP IS 'Description table for privilege type codes.  Maps privilege  type numbers to type names'
/
COMMENT ON COLUMN SYSTEM_PRIVILEGE_MAP.PRIVILEGE IS 'Numeric privilege type code'
/
COMMENT ON COLUMN SYSTEM_PRIVILEGE_MAP.NAME IS 'Name of the type of privilege'
/
COMMENT ON COLUMN SYSTEM_PRIVILEGE_MAP.PROPERTY IS 'Property flag of privilege like not export this privilege, etc'
/
CREATE TABLE TABLE_PRIVILEGE_MAP ( 
	PRIVILEGE	NUMBER NOT NULL,
	NAME     	VARCHAR2(40) NOT NULL 
	)
/
COMMENT ON TABLE TABLE_PRIVILEGE_MAP IS 'Description table for privilege (auditing option) type codes.  Maps privilege (auditing option) type numbers to type names'
/
COMMENT ON COLUMN TABLE_PRIVILEGE_MAP.PRIVILEGE IS 'Numeric privilege (auditing option) type code'
/
COMMENT ON COLUMN TABLE_PRIVILEGE_MAP.NAME IS 'Name of the type of privilege (auditing option)'
/
CREATE TABLE TAILORING_DEVIATION ( 
	TAILORING_ID	NUMBER NOT NULL,
	PROJECT_ID  	NUMBER NULL,
	MODIFICATION	VARCHAR2(600) NULL,
	ACTION      	NUMBER NULL,
	REASON      	VARCHAR2(600) NULL,
	TYPE        	NUMBER NULL,
	CATEGORY    	VARCHAR2(150) NULL,
	NOTE        	VARCHAR2(600) NULL 
	)
/
COMMENT ON TABLE TAILORING_DEVIATION IS 'Deviations (Insight)'
/
CREATE TABLE TAILORING ( 
	TAIL_ID   	NUMBER NOT NULL,
	TAIL_PER  	VARCHAR2(1500) NOT NULL,
	APP_CRI   	VARCHAR2(600) NOT NULL,
	PROCESS_ID	NUMBER NULL,
	STATUS    	VARCHAR2(1) NULL,
	CATEGORY  	VARCHAR2(1) NULL 
	)
/
COMMENT ON TABLE TAILORING IS 'List of tailorings(Insight)'
/
CREATE TABLE TASKS ( 
	TASKID     	NUMBER NOT NULL,
	WORKUNITID 	NUMBER NOT NULL,
	DESCRIPTION	VARCHAR2(1000) NOT NULL,
	ASSIGNEDTO 	NUMBER NOT NULL,
	EFFORT     	NUMBER NULL,
	PLAN_DATE  	DATE NOT NULL,
	ACTUAL_DATE	DATE NULL,
	STATUS     	NUMBER(1,0) NOT NULL,
	TYPE       	NUMBER(2,0) NOT NULL,
	NOTE       	VARCHAR2(200) NULL,
	PROCESS    	NUMBER(3,0) NULL,
	REPLAN_DATE	DATE NULL,
	FEASIBLE   	NUMBER(1,0) NULL,
	CODE       	VARCHAR2(20) NULL 
	)
/
COMMENT ON TABLE TASKS IS 'Tasks (Insight)'
/
CREATE TABLE TEAM_EVALUATION ( 
	TEAM_EVALUATION_ID	NUMBER NOT NULL,
	PROJECT_ID        	NUMBER NOT NULL,
	DEVELOPER_ID      	NUMBER NOT NULL,
	ROLE              	NVARCHAR2(600) NULL,
	EFFECT            	NVARCHAR2(600) NULL,
	COST              	NUMBER NULL,
	NOTE              	NVARCHAR2(600) NULL 
	)
/
CREATE TABLE TEAM ( 
	TEAM_ID       	NUMBER(22,0) NOT NULL,
	TEAM_NAME     	VARCHAR2(255) NOT NULL,
	TEAM_LEADER_ID	NUMBER(22,0) NULL,
	PARENT_TEAM_ID	NUMBER(22,0) NULL,
	NOTE          	VARCHAR2(600) NULL 
	)
/
CREATE TABLE TEST_STRATEGY ( 
	TEST_ID                 	NUMBER NOT NULL,
	TEST_PRJ_ID             	NUMBER NOT NULL,
	TEST_ITEM               	VARCHAR2(600) NOT NULL,
	TEST_TYPE               	NUMBER NOT NULL,
	TEST_REVIEWER           	VARCHAR2(600) NOT NULL,
	TEST_ENTRY_CRITERIA     	VARCHAR2(600) NOT NULL,
	TEST_COMPLETION_CRITERIA	VARCHAR2(600) NOT NULL 
	)
/
CREATE TABLE TIMESHEET_ARCHIVE ( 
	TIMESHEET_ID      	NUMBER NOT NULL,
	DEVELOPER_ID      	NUMBER NOT NULL,
	PROJECT_ID        	NUMBER NOT NULL,
	CREATE_DATE       	DATE NOT NULL,
	OCCUR_DATE        	DATE NOT NULL,
	DURATION          	NUMBER(4,1) NOT NULL,
	STATUS            	NUMBER NULL,
	KPA_ID            	NUMBER NULL,
	TOW_ID            	NUMBER NULL,
	PROCESS_ID        	NUMBER NULL,
	WP_ID             	NUMBER NULL,
	APPROVED_BY_LEADER	VARCHAR2(60) NULL,
	APPROVED_BY_SEPG  	VARCHAR2(60) NULL,
	DESCRIPTION       	VARCHAR2(300) NULL,
	RCOMMENT          	VARCHAR2(300) NULL 
	)
/
COMMENT ON TABLE TIMESHEET_ARCHIVE IS 'Timesheet archive used by FI/Project archive'
/
CREATE TABLE TIMESHEET_EXEMPTION ( 
	EXEMPTION_ID    	NUMBER NOT NULL,
	DEVELOPER_ID    	NUMBER NOT NULL,
	TYPE            	NUMBER(2,0) NOT NULL,
	WEEKDAY         	VARCHAR2(10) NULL,
	FROM_DATE       	DATE NULL,
	TO_DATE         	DATE NULL,
	REASON          	VARCHAR2(600) NULL,
	NOTE            	VARCHAR2(600) NULL,
	DUMMY_FIELD     	VARCHAR2(1) NULL,
	NEW_EXEMPTION_ID	NUMBER NULL 
	)
/
COMMENT ON TABLE TIMESHEET_EXEMPTION IS 'Contain all timesheet exemption cases'
/
COMMENT ON COLUMN TIMESHEET_EXEMPTION.EXEMPTION_ID IS 'primary key of timesheet_exemption table'
/
COMMENT ON COLUMN TIMESHEET_EXEMPTION.DEVELOPER_ID IS 'foreign key of timesheet_exemption table that connect to developer table'
/
COMMENT ON COLUMN TIMESHEET_EXEMPTION.TYPE IS 'contain information of timesheet exptemption, permanent, temporary, weekly'
/
COMMENT ON COLUMN TIMESHEET_EXEMPTION.WEEKDAY IS 'contain all days in week from monday, ... to saturday'
/
COMMENT ON COLUMN TIMESHEET_EXEMPTION.FROM_DATE IS 'exemption from date'
/
COMMENT ON COLUMN TIMESHEET_EXEMPTION.TO_DATE IS 'exemption to date'
/
COMMENT ON COLUMN TIMESHEET_EXEMPTION.REASON IS 'reason for exemption'
/
COMMENT ON COLUMN TIMESHEET_EXEMPTION.NOTE IS 'note for exemption'
/
CREATE TABLE TIMESHEET_MIGRATE ( 
	TIMESHEET_ID	NUMBER NULL,
	TYPE        	VARCHAR2(10) NULL 
	)
/
CREATE TABLE TIMESHEET_OLD_DATA ( 
	TIMESHEET_ID      	NUMBER NOT NULL,
	DEVELOPER_ID      	NUMBER NOT NULL,
	PROJECT_ID        	NUMBER NOT NULL,
	CREATE_DATE       	DATE NOT NULL,
	OCCUR_DATE        	DATE NOT NULL,
	DURATION          	NUMBER(4,1) NOT NULL,
	STATUS            	NUMBER NULL,
	KPA_ID            	NUMBER NULL,
	TOW_ID            	NUMBER NULL,
	PROCESS_ID        	NUMBER NULL,
	WP_ID             	NUMBER NULL,
	APPROVED_BY_LEADER	VARCHAR2(60) NULL,
	APPROVED_BY_SEPG  	VARCHAR2(60) NULL,
	DESCRIPTION       	VARCHAR2(300) NULL,
	RCOMMENT          	VARCHAR2(300) NULL 
	)
/
COMMENT ON TABLE TIMESHEET_OLD_DATA IS 'Timesheet backup for old closed projects,daily projects'
/
CREATE GLOBAL TEMPORARY TABLE TIMESHEET_TEMP ( 
	DURATION  	NUMBER NULL,
	TOW_ID    	NUMBER(3,0) NULL,
	PROCESS_ID	NUMBER(3,0) NULL 
	)
ON COMMIT DELETE ROWS
/
COMMENT ON TABLE TIMESHEET_TEMP IS 'Temporary table to be used to store temporary data of timesheet that used in Queries of Timesheet summary report'
/
CREATE TABLE TIMESHEET ( 
	TIMESHEET_ID      	NUMBER NOT NULL,
	DEVELOPER_ID      	NUMBER NOT NULL,
	PROJECT_ID        	NUMBER NOT NULL,
	CREATE_DATE       	DATE NOT NULL,
	OCCUR_DATE        	DATE NOT NULL,
	DURATION          	NUMBER(4,1) NOT NULL,
	STATUS            	NUMBER NULL,
	KPA_ID            	NUMBER NULL,
	TOW_ID            	NUMBER NULL,
	PROCESS_ID        	NUMBER NULL,
	WP_ID             	NUMBER NULL,
	APPROVED_BY_LEADER	VARCHAR2(60) NULL,
	APPROVED_BY_SEPG  	VARCHAR2(60) NULL,
	DESCRIPTION       	VARCHAR2(300) NULL,
	RCOMMENT          	VARCHAR2(300) NULL,
	PLAPPROVEDTIME    	DATE NULL,
	QAAPPROVEDTIME    	DATE NULL,
	NEW_TIMESHEET_ID  	NUMBER NULL,
	DUMMY_FIELD       	VARCHAR2(1) NULL 
	)
/
COMMENT ON TABLE TIMESHEET IS '(Timesheet) effort tracking'
/
CREATE TABLE TOOLS ( 
	TOOL_ID                    	NUMBER NOT NULL,
	PROJECT_PLAN_ID            	NUMBER NULL,
	NAME                       	VARCHAR2(150) NULL,
	PURPOSE                    	VARCHAR2(600) NULL,
	SOURCE                     	VARCHAR2(150) NULL,
	DESCRIPTION                	VARCHAR2(600) NULL,
	STATUS                     	VARCHAR2(20) NULL,
	DUE_DATE                   	DATE NULL,
	ACTUAL_DATE                	DATE NULL,
	NOTE                       	VARCHAR2(600) NULL,
	TOOL_TYPE                  	NUMBER(2,0) NULL,
	EXPECTED_AVAILABILITY_STAGE	VARCHAR2(100) NULL,
	ACTUAL_AVAILABILITY_STAGE  	VARCHAR2(100) NULL 
	)
/
COMMENT ON TABLE TOOLS IS 'Project tools (Insight)'
/
COMMENT ON COLUMN TOOLS.TOOL_TYPE IS 'comment: 1 - OS, 2 - DBMS, 3 - Languages, 4 - Tools, 5 - Hardwares'
/
CREATE TABLE TRAINING_PLAN ( 
	TRAINING_PLAN_ID	NUMBER NOT NULL,
	PROJECT_PLAN_ID 	NUMBER NULL,
	DESCRIPTION     	VARCHAR2(600) NULL,
	PARTICIPANTS    	VARCHAR2(600) NULL,
	WAIVER_CRITERIA 	VARCHAR2(600) NULL,
	START_DATE      	DATE NULL,
	END_DATE        	DATE NULL,
	ACTUAL_END_DATE 	DATE NULL,
	TOPIC           	VARCHAR2(150) NULL,
	VERIFYBY        	NUMBER(1,0) NULL,
	DURATION        	VARCHAR2(255) NULL 
	)
/
COMMENT ON TABLE TRAINING_PLAN IS 'Project training plan (Insight)'
/
CREATE TABLE TYPEOFWORK ( 
	TOW_ID	NUMBER NOT NULL,
	NAME  	VARCHAR2(150) NOT NULL 
	)
/
COMMENT ON TABLE TYPEOFWORK IS '(Timesheet)'
/
CREATE TABLE USER_PROFILE ( 
	USER_ID    	VARCHAR2(20) NOT NULL,
	NAME       	VARCHAR2(30) NOT NULL,
	GROUP_NAME 	VARCHAR2(30) NOT NULL,
	DESIGNATION	VARCHAR2(30) NULL,
	STATUS     	VARCHAR2(30) NULL,
	PASSWORD   	VARCHAR2(60) NULL 
	)
/
COMMENT ON TABLE USER_PROFILE IS '?'
/
CREATE TABLE WEEKLY_EFFORT ( 
	WEEKLY_EFFORT_ID	NUMBER NOT NULL,
	PLANNED_EFFORT  	NUMBER NULL,
	START_DATE      	DATE NULL,
	PROJECT_ID      	NUMBER NULL 
	)
/
COMMENT ON TABLE WEEKLY_EFFORT IS 'Weekly effort planning (Insight)'
/
CREATE TABLE WORKPRODUCT_PROCESS ( 
	WP_CODE     	VARCHAR2(100) NOT NULL,
	PROCESS_CODE	VARCHAR2(100) NOT NULL 
	)
/
CREATE TABLE WORKPRODUCT ( 
	NAME    	VARCHAR2(500) NOT NULL,
	HAS_LOC 	NUMBER(2,0) NULL,
	WP_ID   	NUMBER NULL,
	PROCESS 	NUMBER NULL,
	CODE    	VARCHAR2(100) NOT NULL,
	DISABLED	NUMBER(2,0) NULL,
	APP_NAME	VARCHAR2(255) NULL 
	)
/
COMMENT ON TABLE WORKPRODUCT IS 'Categories of products'
/
COMMENT ON COLUMN WORKPRODUCT.HAS_LOC IS 'FI/Product: Indicate this WP can has LOC'
/
CREATE TABLE WORKUNIT ( 
	WORKUNITID      	NUMBER NOT NULL,
	TYPE            	NUMBER(5,0) NOT NULL,
	PARENTWORKUNITID	NUMBER NULL,
	TABLEID         	NUMBER NULL,
	WORKUNITNAME    	VARCHAR2(150) NOT NULL,
	PROTECTED       	NUMBER(1,0) NULL 
	)
/
COMMENT ON TABLE WORKUNIT IS 'Abstraction of tables : project,group,organization(Insight)'
/
COMMENT ON COLUMN WORKUNIT.TYPE IS 'define if this is an organization, group, project'
/
COMMENT ON COLUMN WORKUNIT.TABLEID IS 'links to tables organization, group, project'
/
COMMENT ON COLUMN WORKUNIT.PROTECTED IS 'protected WU can''t be deleted through the used interface'
/
CREATE TABLE WP_SIZE ( 
	PROJECT_ID      	NUMBER NOT NULL,
	WP_ID           	NUMBER NOT NULL,
	WP_SIZE         	NUMBER NULL,
	UNIT_ID         	NUMBER NULL,
	PLANNED_DEFECT  	NUMBER NULL,
	REPLANNED_DEFECT	NUMBER NULL 
	)
/
COMMENT ON TABLE WP_SIZE IS 'Defect planning for workproducts (DMS, Insight)'
/
ALTER TABLE ACTIVITY_TYPE
	ADD ( CONSTRAINT ACTIVITY_TYPE_PK
	PRIMARY KEY (CODE)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE AP_SIZEUNIT
	ADD ( PRIMARY KEY (UNIT_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE APPLICATION_TYPE
	ADD ( CONSTRAINT PRIK_ATYPE
	PRIMARY KEY (APPLICATION_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE APPROVAL
	ADD ( PRIMARY KEY (APPROVAL_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE ARCHIVE_ACTUAL_EFFORT_BY_TYPE
	ADD ( CONSTRAINT ARCHIVE_ACT_EFF_BY_TYPE_PK
	PRIMARY KEY (PROJECT_ID, TYPEOFWORK_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE ASSIGNMENT
	ADD ( PRIMARY KEY (ASSIGNMENT_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE CHANGES_OF_PROJECT_PLAN
	ADD ( PRIMARY KEY (CHANGE_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE COMMUNICATION_REPORT
	ADD ( PRIMARY KEY (COM_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE CONSTRAINTS
	ADD ( PRIMARY KEY (CONSTRAINT_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE CONTRACT_TYPE
	ADD ( CONSTRAINT PRIK_CONTRACTTYPE
	PRIMARY KEY (CONTRACT_TYPE_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE CONVERSION
	ADD ( PRIMARY KEY (CONVERSION_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE CUS_METRICS
	ADD ( PRIMARY KEY (CODE)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE CUS_POINT
	ADD ( PRIMARY KEY (CUS_POINT_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE CUSTOMER
	ADD ( CONSTRAINT CUSTOMER_PK
	PRIMARY KEY (CUSTOMER_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE DAR_PLAN
	ADD ( CONSTRAINT DAR_PK
	PRIMARY KEY (DAR_PLAN_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE DEFECT_ARCHIVE
	ADD ( CONSTRAINT DEFECT_ARCHIVE_PK
	PRIMARY KEY (DEFECT_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE DEFECT_ATTACHMENT
	ADD ( CONSTRAINT DEFECT_ATT_PK
	PRIMARY KEY (ATTACHMENT_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE DEFECT_DISTRIBUTION_BY_PROCESS
	ADD ( PRIMARY KEY (PROCESS_ID, LIFECYCLE_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE DEFECT_HISTORY
	ADD ( PRIMARY KEY (DEFECT_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE DEFECT_PERMISSION
	ADD ( PRIMARY KEY (PROJECT_ID, DEVELOPER_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE DEFECT_PRIORITY
	ADD ( PRIMARY KEY (DP_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE DEFECT_QUERY
	ADD ( PRIMARY KEY (QUERY_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE DEFECT_SEVERITY
	ADD ( PRIMARY KEY (DEFS_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE DEFECT_STATUS
	ADD ( PRIMARY KEY (DS_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE DEFECT_TYPE
	ADD ( PRIMARY KEY (DT_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE DEFECT
	ADD ( PRIMARY KEY (DEFECT_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE DEPENDENCIES
	ADD ( PRIMARY KEY (DEPENDENCY_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE DEVELOPER
	ADD ( PRIMARY KEY (DEVELOPER_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE EST_DEFECT
	ADD ( PRIMARY KEY (EST_DEFECT_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE ESTIMATION_METHOD
	ADD ( PRIMARY KEY (METHOD_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE FINANCIAL_PLAN
	ADD ( PRIMARY KEY (INVOICE_SCHEDULE_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE FURTHER_WORK
	ADD ( PRIMARY KEY (FURTHER_WORK_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE GENERAL_REFERENCE
	ADD ( CONSTRAINT GENERAL_REFERENCE_PK
	PRIMARY KEY (GENERAL_REF_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE GROUPS
	ADD ( CONSTRAINT PRIK
	PRIMARY KEY (GROUP_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE HELP
	ADD ( CONSTRAINT HELP_TOPIC_SEQ
	PRIMARY KEY (TOPIC, SEQ)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE HOLIDAY_TYPE
	ADD ( CONSTRAINT HOLIDAY_TYPE_PK
	PRIMARY KEY (HOLIDAY_TYPE_CODE)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE HOLIDAY
	ADD ( CONSTRAINT HOLIDAY_PK
	PRIMARY KEY (HOLIDAY_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE INTERFACE
	ADD ( PRIMARY KEY (INTERFACE_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE ISSUE
	ADD ( PRIMARY KEY (ISSUEID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE ITERATION
	ADD ( PRIMARY KEY (ITERATION_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE KPA
	ADD ( PRIMARY KEY (KPA_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE LANGUAGE_CODE
	ADD ( CONSTRAINT LANG_CODE_PK
	PRIMARY KEY (LANG_CODE)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE LANGUAGE
	ADD ( PRIMARY KEY (LANGUAGE_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE LIFECYCLE
	ADD ( PRIMARY KEY (LIFECYCLE_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE MEASUREMENTS_PROGRAM
	ADD ( PRIMARY KEY (MES_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE METRIC_DES
	ADD ( PRIMARY KEY (METRIC_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE METRICGROUP
	ADD ( CONSTRAINT PRIK_MGROUP_ID
	PRIMARY KEY (MGROUP_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE METRICS
	ADD ( PRIMARY KEY (CODE)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE MILESTONE
	ADD ( PRIMARY KEY (MILESTONE_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE MODULE
	ADD ( PRIMARY KEY (MODULE_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE NC
	ADD ( PRIMARY KEY (NCID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE NCCONSTANT
	ADD ( PRIMARY KEY (CONSTANTID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE NCHISTORY
	ADD ( PRIMARY KEY (NCID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE NCVIEW
	ADD ( PRIMARY KEY (VIEWID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE NORMPLAN
	ADD ( CONSTRAINT PRIK_NORMPLAN_ID
	PRIMARY KEY (NORMPLAN_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE OPENISSUE
	ADD ( PRIMARY KEY (OPENISSUE_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE ORGANIZATION
	ADD ( CONSTRAINT PRIK2
	PRIMARY KEY (ORG_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE OTHER_ASSIGNMENT
	ADD ( PRIMARY KEY (OA_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE PAGE
	ADD ( CONSTRAINT PRIKEY
	PRIMARY KEY (PAGEID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE PCB
	ADD ( CONSTRAINT PRIK_PCB_ID
	PRIMARY KEY (PCB_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE PLANNING
	ADD ( CONSTRAINT PRIK_PLANNING_ID
	PRIMARY KEY (PLANNING_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE PLANS_QC_STAGE
	ADD ( CONSTRAINT PLANSQCSTAGE_PK
	PRIMARY KEY (QCID, MILESTONEID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE PRACTICES
	ADD ( PRIMARY KEY (PRACTICE_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE PROCESS_WP_MAPPING
	ADD ( CONSTRAINT PRIK_PRWP
	PRIMARY KEY (PROC_WP_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE PROCESS
	ADD ( CONSTRAINT PROCESS_PK
	PRIMARY KEY (CODE)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE PRODUCT_INTEGRATION_STRATEGY
	ADD ( PRIMARY KEY (INTEGR_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE PRODUCT_LOC_ACTUAL
	ADD ( CONSTRAINT PRODUCT_LOC_ACTUAL_PK
	PRIMARY KEY (PRODUCT_LOC_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE PRODUCT_LOC_PLAN
	ADD ( CONSTRAINT PRODUCT_LOC_PLAN_PK
	PRIMARY KEY (PRODUCT_LOC_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE PROJECT_ARCHIVE_HISTORY
	ADD ( CONSTRAINT PROJECT_ARCHIVE_HISTORY_PK
	PRIMARY KEY (PROJECT_ARCHIVE_HISTORY_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE PROJECT_ARCHIVE
	ADD ( CONSTRAINT PROJECT_ARCHIVE_PK
	PRIMARY KEY (PROJECT_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE PROJECT_COST
	ADD ( PRIMARY KEY (PROJECT_COST_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE PROJECT_DATABASE
	ADD ( PRIMARY KEY (PROJECT_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE PROJECT_DEVIATION
	ADD ( CONSTRAINT PRIK_PRO_DEVIA
	PRIMARY KEY (DEVIATION_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE PROJECT_PLAN
	ADD ( PRIMARY KEY (PROJECT_PLAN_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE PROJECT_SCHEDULE
	ADD ( PRIMARY KEY (SCHED_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE PROJECT_TAILORING
	ADD ( CONSTRAINT PRIMKEY
	PRIMARY KEY (PROJECT_ID, PROCESS_TAIL_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE PROJECT
	ADD ( PRIMARY KEY (PROJECT_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE QC_ACTIVITY
	ADD ( CONSTRAINT QC_ACTIVITY_PK
	PRIMARY KEY (CODE)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE QO_STRATEGY_FOR_MEETING
	ADD ( PRIMARY KEY (QO_STRAT_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE REFERENCE_DATA
	ADD ( CONSTRAINT REFERENCE_DATA_PK
	PRIMARY KEY (REFERENCE_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE REFERENCES
	ADD ( PRIMARY KEY (REFERENCE_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE REPORTCOMMENTS
	ADD ( CONSTRAINT PRIK_REPORTCOMMENTS
	PRIMARY KEY (REPORTCOMMENTS_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE REQ_CHANGES_MNG
	ADD ( PRIMARY KEY (REQ_CHANGES_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE REQUIREMENTS
	ADD ( PRIMARY KEY (REQUIREMENT_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE RESPONSIBILITY
	ADD ( CONSTRAINT RESPONSIBILITY_PK
	PRIMARY KEY (PROJECT_POSITION_CODE)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE REVIEW_STRATEGY
	ADD ( PRIMARY KEY (REV_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE RIGHTGROUP
	ADD ( CONSTRAINT PK2
	PRIMARY KEY (RIGHTGROUPID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE RISK_CATEGORY
	ADD ( CONSTRAINT PRIK_RISK_CATEGORY
	PRIMARY KEY (CATEGORY_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE RISK_CONTIGENCY
	ADD ( PRIMARY KEY (RISK_CONTIGENCY_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE RISK_MITIGATION
	ADD ( PRIMARY KEY (RISK_MITIGATION_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE RISK_SOURCE_MITIGATION
	ADD ( PRIMARY KEY (RISK_SOURCE_MITIGATION_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE RISK_SOURCE
	ADD ( CONSTRAINT PRIK_RISK_SOURCE
	PRIMARY KEY (SOURCE_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE RISK
	ADD ( PRIMARY KEY (RISK_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE STAFFS
	ADD ( PRIMARY KEY (CODE)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE STAGE
	ADD ( PRIMARY KEY (STAGE_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE SUBCONTRACT
	ADD ( PRIMARY KEY (SUBCONTRACT_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE TAILORING_DEVIATION
	ADD ( PRIMARY KEY (TAILORING_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE TAILORING
	ADD ( CONSTRAINT PRIK_TAILORING
	PRIMARY KEY (TAIL_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE TEAM_EVALUATION
	ADD ( PRIMARY KEY (TEAM_EVALUATION_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE TEAM
	ADD ( CONSTRAINT TEAM_PK
	PRIMARY KEY (TEAM_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE TEST_STRATEGY
	ADD ( PRIMARY KEY (TEST_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE TIMESHEET_ARCHIVE
	ADD ( CONSTRAINT TIMESHEET_ARCHIVE_PK
	PRIMARY KEY (TIMESHEET_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE TIMESHEET_EXEMPTION
	ADD ( CONSTRAINT PK_ATT_EXEMPTION_ID
	PRIMARY KEY (EXEMPTION_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE TIMESHEET_OLD_DATA
	ADD ( PRIMARY KEY (TIMESHEET_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE TIMESHEET
	ADD ( PRIMARY KEY (TIMESHEET_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE TOOLS
	ADD ( PRIMARY KEY (TOOL_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE TRAINING_PLAN
	ADD ( PRIMARY KEY (TRAINING_PLAN_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE TYPEOFWORK
	ADD ( PRIMARY KEY (TOW_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE USER_PROFILE
	ADD ( PRIMARY KEY (USER_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE WEEKLY_EFFORT
	ADD ( PRIMARY KEY (WEEKLY_EFFORT_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE WORKPRODUCT
	ADD ( CONSTRAINT WORKPRODUCT_PK
	PRIMARY KEY (CODE)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE WORKUNIT
	ADD ( CONSTRAINT IDZOB
	PRIMARY KEY (WORKUNITID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE WP_SIZE
	ADD ( CONSTRAINT AP_SIZE_PK
	PRIMARY KEY (PROJECT_ID, WP_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE COMPLETENESS_RATE
	ADD ( CONSTRAINT UNIKCOMPLETERATESTATUSPROJ
	UNIQUE (STATUSID, PROJECT_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE CONVERSION
	ADD ( CONSTRAINT UNIK5
	UNIQUE (LANGUAGE_ID, METHOD_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE DEFECT_PLAN
	ADD ( CONSTRAINT UNIK21
	UNIQUE (PROJECT_ID, WP_ID, MODULE_ID, QA_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE DEVELOPER
	ADD ( CONSTRAINT UK_DEVELOPER_ACCOUNT
	UNIQUE (ACCOUNT)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE FMSCACHE
	ADD ( CONSTRAINT CACHE
	UNIQUE (KEY, TYPE, KEY2)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE GENERAL_REFERENCE
	ADD ( CONSTRAINT GENERAL_REFERENCE_UNIK
	UNIQUE (GROUP_CODE, ITEM_CODE, LANG_CODE)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE GROUPS
	ADD ( CONSTRAINT UNIK2
	UNIQUE (GROUPNAME)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE LANGUAGE
	ADD ( CONSTRAINT LANGUAGE_UNIK
	UNIQUE (NAME)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE METRIC_DES
	ADD ( CONSTRAINT UNIK_ID
	UNIQUE (ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE NORMPLAN
	ADD ( CONSTRAINT UNIK_NORMPLAN
	UNIQUE (END_DATE, LIFECYCLE_ID, WORKUNIT)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE ORGANIZATION
	ADD ( CONSTRAINT UNIK3
	UNIQUE (ORGNAME)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE PAGE
	ADD ( CONSTRAINT UNIKE
	UNIQUE (PAGENAME)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE PLANNING
	ADD ( CONSTRAINT UNIK_YEAR_VER_WU
	UNIQUE (YEAR, VERSION, WORKUNIT_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE PROCESS_EFFORT
	ADD ( CONSTRAINT PROCE_KEY
	UNIQUE (PROCESS_EFFORT_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE PROJECT
	ADD ( CONSTRAINT UK_PROJECT_CODE
	UNIQUE (CODE)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE REPORTCOMMENTS
	ADD ( CONSTRAINT UNIK_REPORTCOMMENTS
	UNIQUE (PROJECT_ID, REPORT_DATE, REPORT_TYPE)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE RIGHTFORPAGE
	ADD ( CONSTRAINT UK_RIGHFORPAGE_RGID
	UNIQUE (RIGHTGROUPID, PAGEID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE RIGHTGROUPOFUSERBYWORKUNIT
	ADD ( CONSTRAINT UK
	UNIQUE (WORKUNITID, RIGHTGROUPID, DEVELOPERID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE WORKUNIT
	ADD ( CONSTRAINT UNIK
	UNIQUE (WORKUNITNAME)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE WORKUNIT
	ADD ( CONSTRAINT CONST
	UNIQUE (TYPE, TABLEID)
	NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE ASSIGNMENT
	ADD ( FOREIGN KEY(PROJECT_ID)
	REFERENCES PROJECT(PROJECT_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE ASSIGNMENT
	ADD ( CONSTRAINT FK_DEVELOPER
	FOREIGN KEY(DEVELOPER_ID)
	REFERENCES DEVELOPER(DEVELOPER_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE ASSIGNMENT
	ADD ( CONSTRAINT ASSIGNMENT_FK2
	FOREIGN KEY(TEAM_ID)
	REFERENCES TEAM(TEAM_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE ASSIGNMENT
	ADD ( CONSTRAINT ASSIGNMENT_FK1
	FOREIGN KEY(PROJECT_POSITION_CODE)
	REFERENCES RESPONSIBILITY(PROJECT_POSITION_CODE)
	NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE CHANGES_OF_PROJECT_PLAN
	ADD ( CONSTRAINT FOK_PROJID4
	FOREIGN KEY(PROJECT_ID)
	REFERENCES PROJECT(PROJECT_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE CHANGES_OF_WORKORDER
	ADD ( CONSTRAINT FOK_PROJID3
	FOREIGN KEY(PROJECT_ID)
	REFERENCES PROJECT(PROJECT_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE COMPLETENESS_RATE
	ADD ( FOREIGN KEY(PROJECT_ID)
	REFERENCES PROJECT(PROJECT_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE CONSTRAINTS
	ADD ( CONSTRAINT FOK_PPID2
	FOREIGN KEY(PROJECT_PLAN_ID)
	REFERENCES PROJECT_PLAN(PROJECT_PLAN_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE CONVERSION
	ADD ( CONSTRAINT CONVERSION_LANGUAGE_FK
	FOREIGN KEY(LANGUAGE_ID)
	REFERENCES LANGUAGE(LANGUAGE_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE CONVERSION
	ADD ( CONSTRAINT CONVERSION_ESTIM_METHOD_FK
	FOREIGN KEY(METHOD_ID)
	REFERENCES ESTIMATION_METHOD(METHOD_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE CSS_NORM
	ADD ( CONSTRAINT CSS_FK2
	FOREIGN KEY(GROUP_ID)
	REFERENCES GROUPS(GROUP_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE CSS_NORM
	ADD ( CONSTRAINT CSS_FK1
	FOREIGN KEY(NORMPLAN_ID)
	REFERENCES NORMPLAN(NORMPLAN_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE CUS_POINT
	ADD ( CONSTRAINT CUS_FK2
	FOREIGN KEY(CODE)
	REFERENCES CUS_METRICS(CODE)
	NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE CUS_POINT
	ADD ( CONSTRAINT CUS_FK1
	FOREIGN KEY(MILESTONE_ID)
	REFERENCES MILESTONE(MILESTONE_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE DAR_PLAN
	ADD ( CONSTRAINT DAR_PROJECT_FK
	FOREIGN KEY(PROJECT_ID)
	REFERENCES PROJECT(PROJECT_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE DAR_PLAN
	ADD ( CONSTRAINT DAR_DEVELOPER_FK
	FOREIGN KEY(DEVLOPER_ID)
	REFERENCES DEVELOPER(DEVELOPER_ID)
	ON DELETE SET NULL NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE DEFECT_ATTACHMENT
	ADD ( CONSTRAINT DEFECT_ATT_DEVELOPER_FK
	FOREIGN KEY(DEVELOPER_ID)
	REFERENCES DEVELOPER(DEVELOPER_ID)
	ON DELETE SET NULL NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE DEFECT_ATTACHMENT
	ADD ( CONSTRAINT DEFECT_ATT_DEFECT_FK
	FOREIGN KEY(DEFECT_ID)
	REFERENCES DEFECT(DEFECT_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE DEFECT_PLAN
	ADD ( CONSTRAINT FOK17
	FOREIGN KEY(MODULE_ID)
	REFERENCES MODULE(MODULE_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE DEFECT_PLAN
	ADD ( CONSTRAINT FOK14
	FOREIGN KEY(PROJECT_ID)
	REFERENCES PROJECT(PROJECT_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE DEFECT_QUERY
	ADD ( FOREIGN KEY(PROJECT_ID)
	REFERENCES PROJECT(PROJECT_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE DEFECT_QUERY
	ADD ( FOREIGN KEY(DEVELOPER_ID)
	REFERENCES DEVELOPER(DEVELOPER_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE FURTHER_WORK
	ADD ( CONSTRAINT FOK_PROJID5
	FOREIGN KEY(PROJECT_ID)
	REFERENCES PROJECT(PROJECT_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE GENERAL_REFERENCE
	ADD ( CONSTRAINT GENERAL_REFERENCE_FK1
	FOREIGN KEY(LANG_CODE)
	REFERENCES LANGUAGE_CODE(LANG_CODE)
	NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE GROUPS
	ADD ( CONSTRAINT FOK_LEADER
	FOREIGN KEY(LEADER)
	REFERENCES DEVELOPER(DEVELOPER_ID)
	ON DELETE SET NULL NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE HOLIDAY_UNIT
	ADD ( CONSTRAINT HOLIDAY_UNIT_FK2
	FOREIGN KEY(HOLIDAY_ID)
	REFERENCES HOLIDAY(HOLIDAY_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE HOLIDAY
	ADD ( CONSTRAINT HOLIDAY_FK1
	FOREIGN KEY(HOLIDAY_TYPE_CODE)
	REFERENCES HOLIDAY_TYPE(HOLIDAY_TYPE_CODE)
	NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE INTERFACE
	ADD ( CONSTRAINT FOK_PPID
	FOREIGN KEY(PROJECT_PLAN_ID)
	REFERENCES PROJECT_PLAN(PROJECT_PLAN_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE ISSUE
	ADD ( CONSTRAINT FOK5
	FOREIGN KEY(WORKUNITID)
	REFERENCES WORKUNIT(WORKUNITID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE ITERATION
	ADD ( CONSTRAINT FOK_MILESTONE_ID
	FOREIGN KEY(MILESTONE_ID)
	REFERENCES MILESTONE(MILESTONE_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE METRIC_DES
	ADD ( CONSTRAINT FOK_MGROUP_ID
	FOREIGN KEY(MGROUP_ID)
	REFERENCES METRICGROUP(MGROUP_ID)
	ON DELETE SET NULL NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE MILESTONE
	ADD ( FOREIGN KEY(PROJECT_ID)
	REFERENCES PROJECT(PROJECT_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE MILESTONE
	ADD ( CONSTRAINT FOK_MILESTONE_CONDUCTOR
	FOREIGN KEY(CONDUCTOR)
	REFERENCES DEVELOPER(DEVELOPER_ID)
	ON DELETE SET NULL NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE MODULE
	ADD ( CONSTRAINT MODULE_FK1
	FOREIGN KEY(WORKPRODUCT_CODE)
	REFERENCES WORKPRODUCT(CODE)
	NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE MODULE
	ADD ( CONSTRAINT FOK_PROJID6
	FOREIGN KEY(PROJECT_ID)
	REFERENCES PROJECT(PROJECT_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE NORMPLAN
	ADD ( CONSTRAINT FOK_WORKUNIT
	FOREIGN KEY(WORKUNIT)
	REFERENCES WORKUNIT(WORKUNITID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE NORMPLAN
	ADD ( CONSTRAINT FOK_LIFECYCLE_ID
	FOREIGN KEY(LIFECYCLE_ID)
	REFERENCES LIFECYCLE(LIFECYCLE_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE NORMS
	ADD ( CONSTRAINT FOK_NORMPLAN_ID
	FOREIGN KEY(NORMPLAN_ID)
	REFERENCES NORMPLAN(NORMPLAN_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE OPENISSUE
	ADD ( FOREIGN KEY(PROJECT_ID)
	REFERENCES PROJECT(PROJECT_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE OTHER_ACTIVITY
	ADD ( CONSTRAINT FOK_PROJID7
	FOREIGN KEY(PROJECT_PLAN_ID)
	REFERENCES PROJECT(PROJECT_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE OTHER_ASSIGNMENT
	ADD ( FOREIGN KEY(DEVELOPER_ID)
	REFERENCES DEVELOPER(DEVELOPER_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE PCB
	ADD ( CONSTRAINT FOK_WORKUNIT2
	FOREIGN KEY(WORKUNIT)
	REFERENCES WORKUNIT(WORKUNITID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE PCB
	ADD ( CONSTRAINT FOK_DEVELOPER_ID
	FOREIGN KEY(DEVELOPER_ID)
	REFERENCES DEVELOPER(DEVELOPER_ID)
	ON DELETE SET NULL NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE PCBMETRIC
	ADD ( CONSTRAINT FOK_PCB_ID
	FOREIGN KEY(PCB_ID)
	REFERENCES PCB(PCB_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE PCBMETRICPROJECT
	ADD ( CONSTRAINT FOK_PROJECT_ID
	FOREIGN KEY(PROJECT_ID)
	REFERENCES PROJECT(PROJECT_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE PCBMETRICPROJECT
	ADD ( CONSTRAINT FOK_PCB_ID2
	FOREIGN KEY(PCB_ID)
	REFERENCES PCB(PCB_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE PCBMGROUP
	ADD ( CONSTRAINT FOK_PCB_ID4
	FOREIGN KEY(PCB_ID)
	REFERENCES PCB(PCB_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE PCBMGROUP
	ADD ( CONSTRAINT FOK_MGROUP_ID2
	FOREIGN KEY(MGROUP_ID)
	REFERENCES METRICGROUP(MGROUP_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE PCBPROJECT
	ADD ( CONSTRAINT FOK_PROJECT_ID2
	FOREIGN KEY(PROJECT_ID)
	REFERENCES PROJECT(PROJECT_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE PCBPROJECT
	ADD ( CONSTRAINT FOK_PCB_ID3
	FOREIGN KEY(PCB_ID)
	REFERENCES PCB(PCB_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE PLANNING
	ADD ( CONSTRAINT FOK_WORKUNIT_ID
	FOREIGN KEY(WORKUNIT_ID)
	REFERENCES WORKUNIT(WORKUNITID)
	ON DELETE SET NULL NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE PLANS_PROCESS_STAGE
	ADD ( CONSTRAINT FOK_STAGEID2
	FOREIGN KEY(MILESTONEID)
	REFERENCES MILESTONE(MILESTONE_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE PLANS_PROCESS_STAGE
	ADD ( CONSTRAINT FOK_STAGEID
	FOREIGN KEY(STAGEID)
	REFERENCES MILESTONE(MILESTONE_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE PLANS_QC_STAGE
	ADD ( CONSTRAINT PLANSQCSTAGE_MILESTONE_FK
	FOREIGN KEY(MILESTONEID)
	REFERENCES MILESTONE(MILESTONE_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE PLANS
	ADD ( CONSTRAINT FOK_PLANNING_ID
	FOREIGN KEY(PLANNING_ID)
	REFERENCES PLANNING(PLANNING_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE POST_MORTEM_REPORT
	ADD ( CONSTRAINT FOK_PROJID8
	FOREIGN KEY(PROJECT_ID)
	REFERENCES PROJECT(PROJECT_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE PRACTICES
	ADD ( CONSTRAINT FOK_PROJID9
	FOREIGN KEY(PROJECT_ID)
	REFERENCES PROJECT(PROJECT_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE PRODUCT_LOC_ACTUAL
	ADD ( CONSTRAINT PRODUCT_LOC_ACTUAL_PROJECT_FK
	FOREIGN KEY(PROJECT_ID)
	REFERENCES PROJECT(PROJECT_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE PRODUCT_LOC_ACTUAL
	ADD ( CONSTRAINT PRODUCT_LOC_ACTUAL_MODULE_FK
	FOREIGN KEY(MODULE_ID)
	REFERENCES MODULE(MODULE_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE PRODUCT_LOC_ACTUAL
	ADD ( CONSTRAINT PRODUCT_LOC_ACTUAL_LANGUAGE_FK
	FOREIGN KEY(LANGUAGE_ID)
	REFERENCES LANGUAGE(LANGUAGE_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE PRODUCT_LOC_PLAN
	ADD ( CONSTRAINT PRODUCT_LOC_PLAN_PROJECT_FK
	FOREIGN KEY(PROJECT_ID)
	REFERENCES PROJECT(PROJECT_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE PRODUCT_LOC_PLAN
	ADD ( CONSTRAINT PRODUCT_LOC_PLAN_MODULE_FK
	FOREIGN KEY(MODULE_ID)
	REFERENCES MODULE(MODULE_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE PRODUCT_LOC_PLAN
	ADD ( CONSTRAINT PRODUCT_LOC_PLAN_LANGUAGE_FK
	FOREIGN KEY(LANGUAGE_ID)
	REFERENCES LANGUAGE(LANGUAGE_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE PROJECT_HIS
	ADD ( CONSTRAINT FOK_PROJID2
	FOREIGN KEY(PROJECT_ID)
	REFERENCES PROJECT(PROJECT_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE PROJECT_PLAN
	ADD ( CONSTRAINT FOK_ATYPE
	FOREIGN KEY(APPLICATION_TYPE)
	REFERENCES APPLICATION_TYPE(APPLICATION_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE PROJECT_PLAN
	ADD ( CONSTRAINT FOK25
	FOREIGN KEY(PROJECT_ID)
	REFERENCES PROJECT(PROJECT_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE PROJECT_TAILORING
	ADD ( CONSTRAINT FORKEY
	FOREIGN KEY(PROCESS_TAIL_ID)
	REFERENCES TAILORING(TAIL_ID)
	ON DELETE SET NULL NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE QCACTIVITY_ACTIVITYTYPE
	ADD ( CONSTRAINT QCACTIVITY_ACTIVITYTYPE_FK2
	FOREIGN KEY(QC_CODE)
	REFERENCES QC_ACTIVITY(CODE)
	NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE QCACTIVITY_ACTIVITYTYPE
	ADD ( CONSTRAINT QCACTIVITY_ACTIVITYTYPE_FK1
	FOREIGN KEY(TYPE_CODE)
	REFERENCES ACTIVITY_TYPE(CODE)
	NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE QCACTIVITY_PROCESS
	ADD ( CONSTRAINT QCACTIVITY_PROCESS_FK2
	FOREIGN KEY(QC_CODE)
	REFERENCES QC_ACTIVITY(CODE)
	NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE QCACTIVITY_PROCESS
	ADD ( CONSTRAINT QCACTIVITY_PROCESS_FK1
	FOREIGN KEY(PROCESS_CODE)
	REFERENCES PROCESS(CODE)
	NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE QCACTIVITY_WORKPRODUCT
	ADD ( CONSTRAINT QCACTIVITY_WORKPRODUCT_FK2
	FOREIGN KEY(QC_CODE)
	REFERENCES QC_ACTIVITY(CODE)
	NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE QCACTIVITY_WORKPRODUCT
	ADD ( CONSTRAINT QCACTIVITY_WORKPRODUCT_FK1
	FOREIGN KEY(WP_CODE)
	REFERENCES WORKPRODUCT(CODE)
	NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE REFERENCE_DATA
	ADD ( CONSTRAINT REFERENCE_DATA_FK1
	FOREIGN KEY(LANG_CODE)
	REFERENCES LANGUAGE_CODE(LANG_CODE)
	NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE REFERENCES
	ADD ( CONSTRAINT FOK_PPID3
	FOREIGN KEY(PROJECT_PLAN_ID)
	REFERENCES PROJECT_PLAN(PROJECT_PLAN_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE REPORTCOMMENTS
	ADD ( CONSTRAINT FOK_PROJID11
	FOREIGN KEY(PROJECT_ID)
	REFERENCES PROJECT(PROJECT_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE REQUIREMENTS
	ADD ( CONSTRAINT FOK_PROJID12
	FOREIGN KEY(PROJECT_ID)
	REFERENCES PROJECT(PROJECT_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE REVIEW_EFFORT
	ADD ( CONSTRAINT FOK11
	FOREIGN KEY(MODULE_ID)
	REFERENCES MODULE(MODULE_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE REVIEW_EFFORT
	ADD ( CONSTRAINT FOK10
	FOREIGN KEY(PROJECT_ID)
	REFERENCES PROJECT(PROJECT_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE RIGHTFORPAGE
	ADD ( CONSTRAINT FOOK2
	FOREIGN KEY(RIGHTGROUPID)
	REFERENCES RIGHTGROUP(RIGHTGROUPID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE RIGHTFORPAGE
	ADD ( CONSTRAINT FOOK
	FOREIGN KEY(PAGEID)
	REFERENCES PAGE(PAGEID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE RIGHTGROUPOFUSERBYWORKUNIT
	ADD ( CONSTRAINT FOK3
	FOREIGN KEY(DEVELOPERID)
	REFERENCES DEVELOPER(DEVELOPER_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE RIGHTGROUPOFUSERBYWORKUNIT
	ADD ( CONSTRAINT FOK2
	FOREIGN KEY(WORKUNITID)
	REFERENCES WORKUNIT(WORKUNITID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE RIGHTGROUPOFUSERBYWORKUNIT
	ADD ( CONSTRAINT FOK
	FOREIGN KEY(RIGHTGROUPID)
	REFERENCES RIGHTGROUP(RIGHTGROUPID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE RISK_CONTIGENCY
	ADD ( CONSTRAINT RISK_CONT_FK1
	FOREIGN KEY(RISK_ID)
	REFERENCES RISK(RISK_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE RISK_MITIGATION
	ADD ( CONSTRAINT RISK_FK1
	FOREIGN KEY(RISK_ID)
	REFERENCES RISK(RISK_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE RISK_SOURCE
	ADD ( CONSTRAINT FOK_CATEGORY_ID
	FOREIGN KEY(CATEGORY_ID)
	REFERENCES RISK_CATEGORY(CATEGORY_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE RISK
	ADD ( CONSTRAINT FOK_PROJID13
	FOREIGN KEY(PROJECT_ID)
	REFERENCES PROJECT(PROJECT_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE RISK
	ADD ( CONSTRAINT FOK6
	FOREIGN KEY(DEVELOPER_ID)
	REFERENCES DEVELOPER(DEVELOPER_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE SUBCONTRACT
	ADD ( CONSTRAINT FOK_PROJID14
	FOREIGN KEY(PROJECT_PLAN_ID)
	REFERENCES PROJECT(PROJECT_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE TASKS
	ADD ( CONSTRAINT FK_TASKS_WU_ID
	FOREIGN KEY(WORKUNITID)
	REFERENCES WORKUNIT(WORKUNITID)
	NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE TEAM
	ADD ( CONSTRAINT TEAM_FK1
	FOREIGN KEY(TEAM_LEADER_ID)
	REFERENCES DEVELOPER(DEVELOPER_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE TIMESHEET_ARCHIVE
	ADD ( CONSTRAINT TIMESHEET_ARCHIVE_PRJ_FK
	FOREIGN KEY(PROJECT_ID)
	REFERENCES PROJECT(PROJECT_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE TIMESHEET_ARCHIVE
	ADD ( CONSTRAINT TIMESHEET_ARCHIVE_DEV_FK
	FOREIGN KEY(DEVELOPER_ID)
	REFERENCES DEVELOPER(DEVELOPER_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE TIMESHEET_EXEMPTION
	ADD ( CONSTRAINT FK_ATT_DEVELOPER_ID
	FOREIGN KEY(DEVELOPER_ID)
	REFERENCES DEVELOPER(DEVELOPER_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE TIMESHEET_OLD_DATA
	ADD ( FOREIGN KEY(PROJECT_ID)
	REFERENCES PROJECT(PROJECT_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE TIMESHEET_OLD_DATA
	ADD ( FOREIGN KEY(DEVELOPER_ID)
	REFERENCES DEVELOPER(DEVELOPER_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE TIMESHEET
	ADD ( FOREIGN KEY(PROJECT_ID)
	REFERENCES PROJECT(PROJECT_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE TIMESHEET
	ADD ( FOREIGN KEY(DEVELOPER_ID)
	REFERENCES DEVELOPER(DEVELOPER_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE TOOLS
	ADD ( CONSTRAINT FOK_PROJID16
	FOREIGN KEY(PROJECT_PLAN_ID)
	REFERENCES PROJECT(PROJECT_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE TRAINING_PLAN
	ADD ( CONSTRAINT FOK_PROJID17
	FOREIGN KEY(PROJECT_PLAN_ID)
	REFERENCES PROJECT(PROJECT_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE WEEKLY_EFFORT
	ADD ( CONSTRAINT FOK_PROJID18
	FOREIGN KEY(PROJECT_ID)
	REFERENCES PROJECT(PROJECT_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE WORKPRODUCT_PROCESS
	ADD ( CONSTRAINT WORKPRODUCT_PROCESS_FK2
	FOREIGN KEY(PROCESS_CODE)
	REFERENCES PROCESS(CODE)
	NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE WORKPRODUCT_PROCESS
	ADD ( CONSTRAINT WORKPRODUCT_PROCESS_FK1
	FOREIGN KEY(WP_CODE)
	REFERENCES WORKPRODUCT(CODE)
	NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE WP_SIZE
	ADD ( FOREIGN KEY(UNIT_ID)
	REFERENCES AP_SIZEUNIT(UNIT_ID)
	NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE WP_SIZE
	ADD ( CONSTRAINT FOK12
	FOREIGN KEY(PROJECT_ID)
	REFERENCES PROJECT(PROJECT_ID)
	ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )





CREATE TYPE DEFECT_RECORD_SET AS TABLE OF DEFECT_RECORD

CREATE TYPE DELIVERABLE_RECORD_SET AS TABLE OF DELIVERABLE_RECORD

CREATE TYPE MILESTONE_RECORD_SET AS TABLE OF MILESTONE_RECORD

CREATE TYPE MODULE_RECORD_SET AS TABLE OF MODULE_RECORD

CREATE TYPE PROJECT_RECORD_SET AS TABLE OF PROJECT_RECORD

CREATE TYPE TIMESHEET_RECORD_SET AS TABLE OF TIMESHEET_RECORD




/*
Script generated by Aqua Data Studio 6.5.0 on Aug-07-2009 09:38:30 AM
Database: FMS
Schema: FMSB
Objects: VIEW, SYNONYM, SEQUENCE, PACKAGE, PACKAGE_BODY, PROCEDURE, FUNCTION, OBJECT_TYPE, TABLE_TYPE, ARRAY_TYPE, CLUSTER
*/
CREATE VIEW TS_TRACK_PRJ_VIEW ( PROJECT_ID, DEV_ID, PROJECT_CODE, ACCOUNT, FULL_NAME, USER_BEGIN_DATE )
AS
SELECT DISTINCT a.project_id AS PROJECT_ID, a.developer_id AS DEV_ID,
p.code AS project_code, d.ACCOUNT AS ACCOUNT, d.name as FULL_NAME, d.begin_date as User_Begin_Date
FROM assignment a, developer d, project p
WHERE p.project_id = a.project_id AND d.developer_id = a.developer_id
/
CREATE SEQUENCE ASSIGNMENT_SEQ
	INCREMENT BY 1
	START WITH 163336
	NOMAXVALUE
	MINVALUE 100000
	NOCYCLE
	CACHE 20
	ORDER
/
CREATE SEQUENCE ATTACH_SEQ
	INCREMENT BY 1
	START WITH 110671
	NOMAXVALUE
	MINVALUE 1000
	NOCYCLE
	CACHE 50
	NOORDER
/
CREATE SEQUENCE BANDWIDTH_SEQ
	INCREMENT BY 1
	START WITH 1
	MAXVALUE 9999999999999999999999999999
	NOMINVALUE
	NOCYCLE
	CACHE 20
	NOORDER
/
CREATE SEQUENCE CALL_LOGS_SEQ
	INCREMENT BY 1
	START WITH 481
	MAXVALUE 9999999999999999999999999999
	NOMINVALUE
	NOCYCLE
	CACHE 20
	NOORDER
/
CREATE SEQUENCE CALL_SEQ
	INCREMENT BY 1
	START WITH 38500
	MAXVALUE 99999999999999999999999999
	NOMINVALUE
	NOCYCLE
	CACHE 20
	NOORDER
/
CREATE SEQUENCE COMMDEF_SEQ
	INCREMENT BY 1
	START WITH 4920
	NOMAXVALUE
	MINVALUE 0
	NOCYCLE
	CACHE 20
	ORDER
/
CREATE SEQUENCE CONVERSION_SEQ
	INCREMENT BY 1
	START WITH 7113
	MAXVALUE 99999999999999
	MINVALUE 22
	CYCLE
	CACHE 20
	NOORDER
/
CREATE SEQUENCE DEFECT_PLAN_SEQ
	INCREMENT BY 1
	START WITH 102145
	MAXVALUE 9999999999999999999999
	MINVALUE 100000
	NOCYCLE
	CACHE 20
	NOORDER
/
CREATE SEQUENCE DEFECT_SEQ
	INCREMENT BY 1
	START WITH 522415
	NOMAXVALUE
	MINVALUE 30000
	NOCYCLE
	CACHE 20
	ORDER
/
CREATE SEQUENCE DEVELOPER_SEQ
	INCREMENT BY 1
	START WITH 118104
	NOMAXVALUE
	MINVALUE 100000
	NOCYCLE
	CACHE 20
	ORDER
/
CREATE SEQUENCE DMSPROJECT_SEQ
	INCREMENT BY 1
	START WITH 485
	NOMAXVALUE
	NOMINVALUE
	NOCYCLE
	CACHE 20
	NOORDER
/
CREATE SEQUENCE ESTIMATION_METHOD_SEQ
	INCREMENT BY 1
	START WITH 8
	MAXVALUE 999999999999999999999
	MINVALUE 0
	NOCYCLE
	CACHE 30
	ORDER
/
CREATE SEQUENCE FURTHER_WORK_SEQ
	INCREMENT BY 1
	START WITH 140
	MAXVALUE 9999999999
	NOMINVALUE
	CYCLE
	CACHE 20
	NOORDER
/
CREATE SEQUENCE GROUP_SEQ
	INCREMENT BY 1
	START WITH 475
	MAXVALUE 999999999
	NOMINVALUE
	NOCYCLE
	CACHE 20
	ORDER
/
CREATE SEQUENCE HIBERNATE_SEQUENCE
	INCREMENT BY 1
	START WITH 54041
	NOMAXVALUE
	NOMINVALUE
	NOCYCLE
	CACHE 20
	NOORDER
/
CREATE SEQUENCE HUMAN_REPORTS_SEQ
	INCREMENT BY 1
	START WITH 6441
	MAXVALUE 9999999999999999999999999999
	NOMINVALUE
	NOCYCLE
	CACHE 20
	NOORDER
/
CREATE SEQUENCE ISSUE_SEQ
	INCREMENT BY 1
	START WITH 128019
	NOMAXVALUE
	MINVALUE 100000
	NOCYCLE
	CACHE 20
	ORDER
/
CREATE SEQUENCE ITERATION_SEQ
	INCREMENT BY 1
	START WITH 1207
	MAXVALUE 999999999999
	MINVALUE 13
	NOCYCLE
	CACHE 20
	ORDER
/
CREATE SEQUENCE LANGUAGE_SEQ
	INCREMENT BY 1
	START WITH 660
	MAXVALUE 9999999999999
	MINVALUE 3
	CYCLE
	CACHE 20
	NOORDER
/
CREATE SEQUENCE METRICS_SEQ
	INCREMENT BY 1
	START WITH 19241
	MAXVALUE 9999999999999999999999999999
	NOMINVALUE
	NOCYCLE
	CACHE 20
	NOORDER
/
CREATE SEQUENCE MILESTONE_SEQ
	INCREMENT BY 1
	START WITH 121034
	NOMAXVALUE
	MINVALUE 100000
	NOCYCLE
	CACHE 20
	ORDER
/
CREATE SEQUENCE MODULE_SEQ
	INCREMENT BY 1
	START WITH 171160
	NOMAXVALUE
	MINVALUE 100000
	NOCYCLE
	CACHE 20
	ORDER
/
CREATE SEQUENCE NCCONDITION_SEQ
	INCREMENT BY 1
	START WITH 4
	NOMAXVALUE
	NOMINVALUE
	NOCYCLE
	CACHE 20
	NOORDER
/
CREATE SEQUENCE NCCONSTANT_SEQ
	INCREMENT BY 1
	START WITH 980
	NOMAXVALUE
	MINVALUE 0
	NOCYCLE
	CACHE 20
	NOORDER
/
CREATE SEQUENCE NCLOG_SEQ
	INCREMENT BY 1
	START WITH 2152
	NOMAXVALUE
	NOMINVALUE
	NOCYCLE
	CACHE 20
	NOORDER
/
CREATE SEQUENCE NCVIEW_SEQ
	INCREMENT BY 1
	START WITH 121
	NOMAXVALUE
	NOMINVALUE
	NOCYCLE
	CACHE 20
	NOORDER
/
CREATE SEQUENCE NC_SEQ
	INCREMENT BY 1
	START WITH 12223
	NOMAXVALUE
	NOMINVALUE
	NOCYCLE
	CACHE 20
	NOORDER
/
CREATE SEQUENCE OA_SEQ
	INCREMENT BY 1
	START WITH 108231
	NOMAXVALUE
	MINVALUE 100000
	NOCYCLE
	CACHE 20
	ORDER
/
CREATE SEQUENCE ORG_SEQ
	INCREMENT BY 1
	START WITH 84
	MAXVALUE 100
	MINVALUE 4
	NOCYCLE
	CACHE 20
	ORDER
/
CREATE SEQUENCE OTHER_ACTIVITY_SEQ
	INCREMENT BY 1
	START WITH 17908
	NOMAXVALUE
	MINVALUE 0
	NOCYCLE
	CACHE 20
	ORDER
/
CREATE SEQUENCE PLANS_SEQ
	INCREMENT BY 1
	START WITH 16021
	MAXVALUE 9999999999999999999999999999
	NOMINVALUE
	NOCYCLE
	CACHE 20
	NOORDER
/
CREATE SEQUENCE PRACTICES_SEQ
	INCREMENT BY 1
	START WITH 10360
	MAXVALUE 99999999999
	NOMINVALUE
	NOCYCLE
	CACHE 20
	ORDER
/
CREATE SEQUENCE PROCESS_EFFORT_SEQ
	INCREMENT BY 1
	START WITH 21904
	NOMAXVALUE
	MINVALUE 0
	NOCYCLE
	CACHE 20
	ORDER
/
CREATE SEQUENCE PROC_WP_SEQ
	INCREMENT BY 1
	START WITH 1240
	NOMAXVALUE
	MINVALUE 0
	NOCYCLE
	CACHE 20
	ORDER
/
CREATE SEQUENCE PRODUCT_LOC_ACTUAL_SEQ
	INCREMENT BY 1
	START WITH 12020
	NOMAXVALUE
	MINVALUE 1000
	NOCYCLE
	CACHE 50
	NOORDER
/
CREATE SEQUENCE PRODUCT_LOC_PLAN_SEQ
	INCREMENT BY 1
	START WITH 10468
	NOMAXVALUE
	MINVALUE 1000
	NOCYCLE
	CACHE 50
	NOORDER
/
CREATE SEQUENCE PROJECT_ARCHIVE_HISTORY_SEQ
	INCREMENT BY 1
	START WITH 100000
	NOMAXVALUE
	MINVALUE 100000
	NOCYCLE
	CACHE 20
	ORDER
/
CREATE SEQUENCE PROJECT_DEVIATION_SEQ
	INCREMENT BY 1
	START WITH 5040
	NOMAXVALUE
	MINVALUE 0
	NOCYCLE
	CACHE 20
	ORDER
/
CREATE SEQUENCE PROJECT_PLAN_SEQ
	INCREMENT BY 1
	START WITH 7913
	NOMAXVALUE
	MINVALUE 1200
	NOCYCLE
	CACHE 20
	ORDER
/
CREATE SEQUENCE PROJECT_SEQ
	INCREMENT BY 1
	START WITH 118385
	NOMAXVALUE
	MINVALUE 100000
	NOCYCLE
	CACHE 20
	ORDER
/
CREATE SEQUENCE QUALITY_ACTIVITY_EFFORT_SEQ
	INCREMENT BY 1
	START WITH 31560
	NOMAXVALUE
	MINVALUE 0
	NOCYCLE
	CACHE 20
	ORDER
/
CREATE SEQUENCE QUERY_SEQ
	INCREMENT BY 1
	START WITH 117229
	NOMAXVALUE
	MINVALUE 100000
	NOCYCLE
	CACHE 20
	ORDER
/
CREATE SEQUENCE RISK_CONTINGENCY_SEQ
	INCREMENT BY 1
	START WITH 1002300
	MAXVALUE 9999999999999999999999999999
	NOMINVALUE
	NOCYCLE
	CACHE 20
	ORDER
/
CREATE SEQUENCE RISK_MITIGATION_SEQ
	INCREMENT BY 1
	START WITH 1002320
	MAXVALUE 9999999999999999999999999999
	NOMINVALUE
	NOCYCLE
	CACHE 20
	ORDER
/
CREATE SEQUENCE RISK_SEQ
	INCREMENT BY 1
	START WITH 1000160
	MAXVALUE 9999999999999999999999999999
	NOMINVALUE
	NOCYCLE
	CACHE 20
	ORDER
/
CREATE SEQUENCE STAFFS_SEQ
	INCREMENT BY 1
	START WITH 2761
	MAXVALUE 9999999999999999999999999999
	NOMINVALUE
	NOCYCLE
	CACHE 20
	NOORDER
/
CREATE SEQUENCE TIMESHEET_ARCHIVE_SEQ
	INCREMENT BY 1
	START WITH 362181
	NOMAXVALUE
	NOMINVALUE
	NOCYCLE
	CACHE 20
	ORDER
/
CREATE SEQUENCE TIMESHEET_EXEMPTION_SEQ
	INCREMENT BY 1
	START WITH 4856
	MAXVALUE 99999999999999999999999999
	NOMINVALUE
	NOCYCLE
	CACHE 20
	NOORDER
/
CREATE SEQUENCE TIMESHEET_SEQ
	INCREMENT BY 1
	START WITH 3515494
	NOMAXVALUE
	MINVALUE 100000
	NOCYCLE
	CACHE 20
	ORDER
/
CREATE SEQUENCE WORKUNIT_SEQ
	INCREMENT BY 1
	START WITH 8180
	MAXVALUE 999999999999999999
	MINVALUE 1300
	NOCYCLE
	CACHE 20
	ORDER
/
quit